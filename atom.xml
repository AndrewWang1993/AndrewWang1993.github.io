<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AndrewWang&#39;s Blog</title>
  
  <subtitle>Coding for fun</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaoo.ml/"/>
  <updated>2021-01-07T06:32:52.467Z</updated>
  <id>https://xiaoo.ml/</id>
  
  <author>
    <name>AndrewWang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2021元旦旅游</title>
    <link href="https://xiaoo.ml/2021/01/03/2021%E5%85%83%E6%97%A6%E6%97%85%E6%B8%B8/"/>
    <id>https://xiaoo.ml/2021/01/03/2021元旦旅游/</id>
    <published>2021-01-03T06:10:00.000Z</published>
    <updated>2021-01-07T06:32:52.467Z</updated>
    
    <content type="html"><![CDATA[<p>2021年的元旦假期，是捉蝉人与小蚕蛹斗智斗勇的三天、是公子哥品茶喝茶的三天、也是打工人移动办公勤劳奋斗的三天<br><a id="more"></a></p><p>时间：2021年1月1日——2021年1月3日</p><p>行程：南靖土楼–&gt;东山岛–&gt;南澳岛–&gt;深圳</p><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2021年的元旦假期，是捉蝉人与小蚕蛹斗智斗勇的三天、是公子哥品茶喝茶的三天、也是打工人移动办公勤劳奋斗的三天&lt;br&gt;
    
    </summary>
    
      <category term="摄影" scheme="https://xiaoo.ml/categories/%E6%91%84%E5%BD%B1/"/>
    
    
      <category term="旅游" scheme="https://xiaoo.ml/tags/%E6%97%85%E6%B8%B8/"/>
    
      <category term="自驾游" scheme="https://xiaoo.ml/tags/%E8%87%AA%E9%A9%BE%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>如何屏蔽内容农场</title>
    <link href="https://xiaoo.ml/2020/12/15/%E5%A6%82%E4%BD%95%E5%B1%8F%E8%94%BD%E5%86%85%E5%AE%B9%E5%86%9C%E5%9C%BA/"/>
    <id>https://xiaoo.ml/2020/12/15/如何屏蔽内容农场/</id>
    <published>2020-12-15T08:10:00.000Z</published>
    <updated>2021-01-07T01:54:48.261Z</updated>
    
    <content type="html"><![CDATA[<p>最近半年感觉谷歌的中文搜索内容越来越差劲，经常搜出来莫名其妙的东西，让人不知所云，甚至有的时候网页质量还不如百度。<br><a id="more"></a></p><p>自从谷歌退出中国市场后，其搜索结果质量日渐下降。壹读、每日头条、热备资讯、兰州养生网、代码日志等网站，多为复制抄袭、机器翻译的垃圾内容网站，在谷歌搜索中反而占据前排位置，既骗取点击获得流量，也浪费网友时间。这种行为可以说是赤裸裸的强奸谷歌搜索算法，并往网民眼睛里塞屎。</p><p>本人之前花了一下午开发了 一个辅助搜索结果的浏览器插件，但界面和功能都比较简陋，期间一直没时间完善。 后来从友人处得知有更好用的uBlacklist插件，功能丰富，使用几个月后感觉良好，故而本人特意分享一番。</p><h3 id="内容农村是什么"><a href="#内容农村是什么" class="headerlink" title="内容农村是什么"></a>内容农村是什么</h3><p>内容农场是一种在过去18个月里在互联网上兴起的事物，是一种用大量标题、关键词以及其他伎俩诱骗互联网用户进去看广告的“新闻网站”。这些网站使用玩弄Google排名系统的方式干扰了Google。</p><h3 id="安装和使用uBlacklist"><a href="#安装和使用uBlacklist" class="headerlink" title="安装和使用uBlacklist"></a>安装和使用uBlacklist</h3><p>uBlacklist是一个禁止特定网站显示在谷歌搜索结果的浏览器插件，使用其可以将不喜欢的网站、垃圾网站加入屏蔽列表，从而净化搜索结果，节省你宝贵的时间。</p><ul><li>使用Chrome浏览器打开<a href="https://chrome.google.com/webstore/detail/ublacklist/pncfbmialoiaghdehhbnbhkkgmjanfhe" target="_blank" rel="noopener">uBlacklist安装网址</a>，点击页面上的安装按钮即可。</li><li>安装完成后，Chrome浏览器右上角的插件拦会出现uBlacklist的图标，即一个禁止标志。点击图标出现将当前页面地址加入黑名单的确认框：</li><li>对于垃圾站点，请毫不犹豫的点击“确认”按钮，加入黑名单后，该网站将从搜索结果中消失，简直不能更爽。</li><li>除了打开网页直接加入到黑名单，也可以在谷歌搜索结果中点击“加入黑名单”屏蔽特定网址出现在搜索结果中：</li></ul><p>结合以上两种方式，基本上一两天后，每日头条、热备资讯、兰州养生网等垃圾站点再也不会出现在谷歌搜索结果中，你可以安心的使用谷歌搜索，不用担心眼睛被污染了。</p><h3 id="uBlacklist添加订阅源"><a href="#uBlacklist添加订阅源" class="headerlink" title="uBlacklist添加订阅源"></a>uBlacklist添加订阅源</h3><p>uBlacklist插件支持订阅黑名单，感谢网友提供信息，可以使用<a href="https://cdn.jsdelivr.net/gh/cobaltdisco/Google-Chinese-Results-Blocklist@master/uBlacklist_subscription.txt" target="_blank" rel="noopener">订阅黑名单</a>这一个比较好的订阅源，基本覆盖了各种不良网址以及内容农场。使用方法如下：</p><ul><li>在禁止图标上右键，点击“选项”；</li><li>选项页面拉到下面，点击“添加订阅”。在弹框中名称随便填写，例如“abc”，URL地址填入刚才订阅黑名单，然后点击“添加”；</li><li>接着会出现“uBlacklist”请求获得更多权限的弹框，点击“允许”；</li><li>还可以设置更新间隔，建议选最长的5小时。</li></ul><h3 id="其他的类似软件"><a href="#其他的类似软件" class="headerlink" title="其他的类似软件"></a>其他的类似软件</h3><p>如果不希望过滤谷歌的搜索结果还可以用这款插件：<a href="https://chrome.google.com/webstore/detail/content-farm-terminator/lcghoajegeldpfkfaejegfobkapnemjl?hl=zh-CN" target="_blank" rel="noopener">终结内容农场</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近半年感觉谷歌的中文搜索内容越来越差劲，经常搜出来莫名其妙的东西，让人不知所云，甚至有的时候网页质量还不如百度。&lt;br&gt;
    
    </summary>
    
      <category term="科技" scheme="https://xiaoo.ml/categories/%E7%A7%91%E6%8A%80/"/>
    
    
      <category term="Google" scheme="https://xiaoo.ml/tags/Google/"/>
    
      <category term="搜索" scheme="https://xiaoo.ml/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="内容农场" scheme="https://xiaoo.ml/tags/%E5%86%85%E5%AE%B9%E5%86%9C%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>阿里云盘和Teambition内测初体验</title>
    <link href="https://xiaoo.ml/2020/11/25/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E5%92%8CTeambition%20%E5%86%85%E6%B5%8B%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>https://xiaoo.ml/2020/11/25/阿里云盘和Teambition 内测初体验/</id>
    <published>2020-11-25T02:10:00.000Z</published>
    <updated>2020-12-02T03:38:47.570Z</updated>
    
    <content type="html"><![CDATA[<p>早晨手机收到Teambition的内测码短信，打开邮箱发现阿里云盘的内测码也收到了，这下可以对比下这对亲兄弟了<br><a id="more"></a></p><p>天下苦百度网盘久矣，不但免费用户下载限速到15K，就算是付费用户上传的个人文件也是被百度扫描来扫描去，一旦发现Hash值和黑名单数据吻合，轻则视频变8秒钟教育片，重则直接删除封号，下载大点的文件还要被强行投喂客户端才能下载，反正你文件在我这，爱下不下，一副“客户我是你爸爸”的嘴脸。阿里云盘作为一个搅局者，这个时候重新回到网盘竞争赛场，给那些被百度喂屎用户一丝希望。</p><p>上个月曾经用QQ邮箱申请过内测码，三天后收到邮件被婉拒，不死心用学校发的教育邮箱再次申请，果然隔日就收到了内测码，毕业了还能再吃一波学校的红利😊，申请不到内测码的同学可以试着用EDU邮箱试试哈。</p><h5 id="测试环境：500M联通光纤，5G-WIFI连接。"><a href="#测试环境：500M联通光纤，5G-WIFI连接。" class="headerlink" title="测试环境：500M联通光纤，5G WIFI连接。"></a>测试环境：500M联通光纤，5G WIFI连接。</h5><center><br><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/aliyun_vs.png"><br></center><table><thead><tr><th></th><th>阿里云盘</th><th>Teambition</th></tr></thead><tbody><tr><td>域名</td><td><a href="https://www.aliyundrive.com" target="_blank" rel="noopener">https://www.aliyundrive.com</a></td><td><a href="https://pan.aliyun.com" target="_blank" rel="noopener">https://pan.aliyun.com</a></td></tr><tr><td>开放注册</td><td>否</td><td>否</td></tr><tr><td>手机端</td><td>有</td><td>有</td></tr><tr><td>上传速度</td><td>8M/s</td><td>5M/s</td></tr><tr><td>下载速度</td><td>38M/s</td><td>10M/s</td></tr><tr><td>分享功能</td><td>无</td><td>组员分享</td></tr><tr><td>产品定位</td><td>个人云盘</td><td>阿里办公组件附属盘</td></tr><tr><td>搜索功能</td><td>无</td><td>有</td></tr><tr><td>秒传功能</td><td>有</td><td>无</td></tr><tr><td>二次验证</td><td>无</td><td>有</td></tr><tr><td>容量</td><td>1T</td><td>2T</td></tr><tr><td>回收站</td><td>无</td><td>有</td></tr><tr><td>文件预览</td><td>支持</td><td>支持</td></tr><tr><td>视频转码时间</td><td>2min</td><td>即时</td></tr><tr><td>Office预览加载速度</td><td>慢</td><td>快</td></tr><tr><td>回收站</td><td>无</td><td>有</td></tr><tr><td>手机端相册备份</td><td>有</td><td>有</td></tr></tbody></table><p>目前阿里云盘beta版本满足了我的一切非工作需求（无分享、不限速、功能精简、文件视频可预览、秒传），但据说缅甸一个传说：有一条恶龙，每年要求村庄献祭一个处女，每年这个村庄都会有一个少年英雄去与恶龙搏斗，但无人生还。又一个英雄出发时，有人悄悄尾随，龙穴铺满金银财宝，英雄用剑刺死恶龙。然后坐在尸身上，看着闪烁的珠宝，慢慢地长出鳞片、尾巴和触角，最终变成恶龙。</p><p>阿里云盘，且用且珍惜。</p><center><br><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/dragon.jpg"><br></center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;早晨手机收到Teambition的内测码短信，打开邮箱发现阿里云盘的内测码也收到了，这下可以对比下这对亲兄弟了&lt;br&gt;
    
    </summary>
    
      <category term="云盘" scheme="https://xiaoo.ml/categories/%E4%BA%91%E7%9B%98/"/>
    
    
      <category term="阿里" scheme="https://xiaoo.ml/tags/%E9%98%BF%E9%87%8C/"/>
    
  </entry>
  
  <entry>
    <title>2020十大新型科技（译）</title>
    <link href="https://xiaoo.ml/2020/11/23/2020%E5%8D%81%E5%A4%A7%E6%96%B0%E5%9E%8B%E7%A7%91%E6%8A%80%EF%BC%88%E8%AF%91%EF%BC%89/"/>
    <id>https://xiaoo.ml/2020/11/23/2020十大新型科技（译）/</id>
    <published>2020-11-23T08:10:00.000Z</published>
    <updated>2020-12-02T03:31:14.001Z</updated>
    
    <content type="html"><![CDATA[<p><ni>在COVID-19全球大流行背景下WEF评选出的2020十大科技。</ni><br><a id="more"></a></p><h3 id="1-微针无痛注射与检测"><a href="#1-微针无痛注射与检测" class="headerlink" title="1.微针无痛注射与检测"></a>1.微针无痛注射与检测</h3><p>这种新型微米针头长度50~2000微米，大概一张纸的厚度，1~100微米的宽度，大概头发的宽度。在注射过程中仅仅刺穿皮肤最外层的死皮层，将药物注射到第二层皮肤中，这一层皮肤中充满着活细胞和流动的体液，同时不会刺激到神经细胞产生痛感。</p><p>很多微型针头早已经应用在糖尿病、癌症、神经疼痛的注射治疗上，但是搭载最新科技的微型针头还可以通过改变针头形状来治疗皮肤和特定的癌症，放眼未来的应用场景来看，微型针头除了在疫苗应答率上效率较高以外，还可以搭载生物感应器或者别的无线装置注射到皮下，以检测生化指标。</p><p>但是微型针头并不是没有缺点，有些大分子药物并不能够通过这种微型针头注射，更多的研究和试验还需要进行。但是毋庸置疑的时这种新型微型针头在药物注射、疾病检测，甚至在器官治疗领域大放异彩。</p><h3 id="2-太阳能化工科技"><a href="#2-太阳能化工科技" class="headerlink" title="2.太阳能化工科技"></a>2.太阳能化工科技</h3><p>这是一种利用太阳光作为能源和催化剂将二氧化碳转化为化工产品的技术。这种技术既能消除二氧化碳，缓解温室效应，又能生产人类社会需要的化工制品，确实是一举两得。</p><p>这种技术的产生得益于光激催化剂和光电感应催化剂的效率提高，最近研究者发现一种光电感应现象可以打断二氧化碳的双键，释放碳原子并将其合称为别的有机化合物例如消毒水、化肥、化纤等制品。</p><p>目前这种转化效率还不是很高，因为太阳光中5%的紫外线才是驱动这种反应的有效成分，于是目前的权宜之计是通过电作为催化剂来驱动脱碳反应的发生，但是相比较直接用光来催化，这种方式并不那么环保，但是可预计的未来光驱动催化肯定会今早商业化。</p><h3 id="3-虚拟的受试者"><a href="#3-虚拟的受试者" class="headerlink" title="3.虚拟的受试者"></a>3.虚拟的受试者</h3><p>当没有那么多志愿者来测试疫苗时，疫苗怎么研发？感谢科技时代的人工智能和数字化模拟技术，我们可以使用海量的真实患者数据来模拟出虚拟的受试者，来接种疫苗或者医学测试。</p><p>整个过程分为以下几步，首先从大量患者的病理数据中提取有用数据产生高质量数据库，其次提取并建模标准人体模型，最后利用人工智能来识别和生物监测。</p><p>最近FDA已经批准了若干虚拟受试模型，但是目前的障碍是费用较高，如果能纳入到医保范畴将价格降低到可以承受的范围，将更加有利于此技术走向广泛应用。</p><h3 id="4-空间计算"><a href="#4-空间计算" class="headerlink" title="4.空间计算"></a>4.空间计算</h3><p>空间计算是基于VR和AR的下一代新技术，它在VR和AR的基础上给每个物体添加传感器和感应器，并驱动这些物体形成物联网，一切都通过云计算和云存储来链接统筹。得益于毫米波雷达、GPS、CAD等科技，在精确获得物体位置的前提下空间技术能够得以实现。</p><p>除了在智能家居领域的应用外，现象下病人呼叫120，在空间技术的统筹下协调下，医院的救护车通过自动调绿的十字路口，单元门自动打开，电梯已经自动就位，影响担架进入的家具自动移开，系统自动规划最优道路把病人送往医院，整个过程达到了最快速度。</p><p>最后这项技术在工艺生产领域（如时间动作分析）也有助于实现更高效率、更高标准化、更有安全。</p><h3 id="5-数字医疗"><a href="#5-数字医疗" class="headerlink" title="5.数字医疗"></a>5.数字医疗</h3><p>在COVID-19的大流行下，智能手机帮助人们预防和检测病毒显得尤为重要。但手机的功能不仅局限于常见APP对运动、肺活量、心率、睡眠质量的检测，最新的科技成果甚至能够通过患者体内植入的微型芯片连接数字化设备来检测各种生化数据，基于这些数据甚至可以借助AI来预测癌症。</p><p>目前数字医疗在COVID-19的咨询应答、弱视辅助治疗、健康习惯养成、失眠等领域已经有了应用，但是该技术仍受到关于隐私保护、医疗流程化整合等要素的挑战。</p><h3 id="6-电力航空业"><a href="#6-电力航空业" class="headerlink" title="6.电力航空业"></a>6.电力航空业</h3><p>航空业的碳排放占总排放的2.5%，预计到2050年会翻三番，为了达到碳中和目标，航空业同样有必要进行减碳新技术的研发，电动航空应运而生，电驱动的飞机不但不排放二氧化碳，而且燃料费用降低90%，单次大修时间提高50%，噪音降低70%。</p><p>目前波音空客等公司都对新能源飞机技术有着浓厚兴趣，因为伴随着驱动方式的改变，成本也会大幅度降低，例如传统煤油为能源的飞机往往都有一对巨大的机翼，因为要在起飞阶段提供升力，但是巨大的机翼在高速度下会产生阻力，造成能源的浪费。然而强大的电驱动模式下机翼的长度和大小都可以大幅度缩短。</p><p>然而电力航空模式并不是没有缺点，由于电池性能的限制，主要应用于800Km以下的航线，但值得欣慰的是预计到2050年全球一半航线的距离都是小于800Km的。</p><h3 id="7-低碳水泥"><a href="#7-低碳水泥" class="headerlink" title="7.低碳水泥"></a>7.低碳水泥</h3><p>水泥这种最常见也是最常用的建材，它的生产过程引发的碳排放不容小觑，如果列入碳排放国家名单中能排第三名，仅次于中国和美国，足足占世界的8%。</p><p>因此科学家在研发探索新型水泥，它的制造生产过程能够降低30%的碳排放，甚至挪威一家水泥厂使用的新技术预计2030年完成达到0排放。还有的科学家更进一步，利用细菌制作新的建筑材料，这种建筑材料不但实现低排放，而且在光催化效应下，细菌还能够修复建筑中的裂缝，让建筑物更加安全。但这种水泥由于应力不够，还不能够取代一般水泥，一般仅仅应用在轻负重建筑中。</p><h3 id="8-量子感应器"><a href="#8-量子感应器" class="headerlink" title="8.量子感应器"></a>8.量子感应器</h3><p>量子计算由于其优越的精确性和精准性，可以应用于勘探、水下导航、火山活动检测、地震波检测,原理就类似铯-133制成的原子钟可以精确计量时间一样，量子传感器可以精确的感受到引力波和磁场变化。</p><p>伯明翰大学的研究人员已经研究出一种量子传感器，可以检测到地下管线破裂，这些以往只能通过挖掘才能发现的问题，但是这类传感器一大问题是体积过大，环境温度苛刻，造价过高。目前麻省理工大学在2019年研发出一个十几毫米大小的量子传感器，镶嵌在了CPU芯片上来感应微弱的引力场变化。</p><p>量子传感器仍然极易受到外界环境的影响，这将极大的限制它们的应用，但是越来越多的资金无论来自政府还是私人部门都投入了这个领域，让它有望5年内在医疗和防务领域得到应用。</p><h3 id="9-绿色氢能源"><a href="#9-绿色氢能源" class="headerlink" title="9.绿色氢能源"></a>9.绿色氢能源</h3><p>氢气燃烧产生水蒸气和热量，这个过程不产生CO2，于是氢气会被大家认为是绿色能源，但是事实上氢气分为灰色氢能源和蓝色氢能源，灰色氢能源在氢气产生处理过程中需要化石燃料的燃烧加热，于是不可避免的产生了温室气体，而蓝色氢能源才是完全不产生温室气体的加工过程。</p><p>这种过程就是电解水产生氢气和氧气，过去由于电力的短缺，电解水应用并不广泛，但随着限制太阳能电池板和风能的大量开发，太阳能在用电低谷期发出的·电可以用来电解水产生氢气，将氢气储存起来用于储能。</p><p>目前有的公司已经在研究如果让蓝色制氢过程变得更加便宜，最少相比较灰色制氢过程来说。世界上85%的清洁能源为太阳能和风能，剩下的15%由于对功率要求较高所以对化石能源依赖较大，蓝色氢能源的开发利用让这制造业、航运业、采矿业看到能源替代的曙光。</p><h3 id="10-全基因合成"><a href="#10-全基因合成" class="headerlink" title="10.全基因合成"></a>10.全基因合成</h3><p>2020年初新冠肺炎病毒在中国刚刚流行时，中国把病毒基因序列上传到网上，瑞士团队根据基因序列合成了这种病毒，而不是等待数月才有可能拿到活株。这是基因合成在制药、疫苗研发领域的又一项成就。</p><p>基因修改合成之前都是进行少量的修改，但是得益于超级计算机和人工智能的出现，大规模合成基因得以实现。科学家借助细菌这个载体，能够完成几百万个核苷酸序列对的合成。</p><p>许多科学家都期待更多的研发资金投入，让他们有能力用更少的成本，更快的速度去合成更多的碱基对，这种合成让基于细胞工程的基因修复和生物制造得以实现，从而让我们有能力修改自己的基因，或者说至少治疗某些基因疾病。</p><p>当然基因修改很容易被武器化或者其他方式滥用，这就比以往更加急迫的需要主管部门研究出一种行之有效的方法去发现和监督新威胁，并加强国际合作。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;ni&gt;在COVID-19全球大流行背景下WEF评选出的2020十大科技。&lt;/ni&gt;&lt;br&gt;
    
    </summary>
    
      <category term="科技" scheme="https://xiaoo.ml/categories/%E7%A7%91%E6%8A%80/"/>
    
    
      <category term="碳中和" scheme="https://xiaoo.ml/tags/%E7%A2%B3%E4%B8%AD%E5%92%8C/"/>
    
      <category term="新能源" scheme="https://xiaoo.ml/tags/%E6%96%B0%E8%83%BD%E6%BA%90/"/>
    
      <category term="CO2" scheme="https://xiaoo.ml/tags/CO2/"/>
    
  </entry>
  
  <entry>
    <title>关于农民工工资支付条例的一些思考</title>
    <link href="https://xiaoo.ml/2020/10/22/%E5%85%B3%E4%BA%8E%E5%86%9C%E6%B0%91%E5%B7%A5%E5%B7%A5%E8%B5%84%E6%94%AF%E4%BB%98%E6%9D%A1%E4%BE%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/"/>
    <id>https://xiaoo.ml/2020/10/22/关于农民工工资支付条例的一些思考/</id>
    <published>2020-10-22T03:10:00.000Z</published>
    <updated>2020-11-24T00:22:50.230Z</updated>
    
    <content type="html"><![CDATA[<p>2019年12月4日，国务院常务会议审议通过了由司法部等部门起草的《保障农民工工资支付条例》草案。2019年12月30日国务院总理李克强签署国务院令第724号予以公布，自2020年5月1日起正式施行。<br><a id="more"></a><br>剔除劳动法里老生常谈的一些内容外，对该条例的干货和亮点简要归纳概括可以总结为以下几点：</p><ol><li>主题仅限于为用人单位提供劳动的“农村居民”</li><li>县级以上政府对该工作负责，并纳入考核监督内容</li><li>农民工实名制管理，并书面约定工资标准、支付方式、支付时间等</li><li>工资支付日期应该在提供劳动的当期或次期</li><li>编制工资台账，包含身份证，银行卡，签字确认等信息</li><li>施工总承包开设农民工工资专用账户</li><li>施工总承包或者分包必须和农民工签订劳动合同</li><li>分包对实名制管理和工资支付负责，总包监督负责</li><li>分包单位农民工工资由总承包代发</li><li>建设单位和施工总承包都不得因数量、质量、造价争议而不支付人工费用</li></ol><p>以往农民工在工地打工一般都是熟人带队，老乡介绍，口头约定，现在出台专门的条例对工资发放进行规定，本来应该是一件好事，但是落实起来并不是一件易事，最少从身边这个建设单位、总承包单位、分包单位都是央企的工程来看亦是如此。<br><br></p><ul><li>仅仅保障了“农村居民”，拥有城市户口的农民工没有纳入保障范围</li><li>实名制管理耗费大，农民工流动性高更为实名制制作和管理台账增添压力</li><li>为了抑制人员流动性过大，工程项目实际一般都会压2~3月工资，还有一些工程平时只发生活费，竣工再结算，往往由于同组人员都是老乡，有乡情作为纽带的背书，这种发薪方式被广泛认可。所以当期或次期发放工资不现实</li><li>部分农民工之前仅仅是日结、现结，如果通过银行卡发放工资，还需要提供身份证、办理银行卡等流程。有些银行要求必须本人临柜办理，对于工期短、流动性大的项目不实际。</li><li>签订劳动合同固然增强对农民工的保护，但是外地临时用工的社保缴纳、个人所得税的缴纳都存在不小难度。</li><li>广义上的农民工工资约定为税后工资，但是工资发放非现金化后的工资需要纳税，税负成本分包单位不愿承担。</li><li>总承包代发工资导致分包商对工人的约束减弱，可能导致工程进度、质量受影响。而总承包和分包商均不得以工程进度和质量等理由克扣工资，也容易滋生干好干坏一个样的心理，导致磨洋工吃底薪现象的发生。</li><li>讨要工资，力度不够。该条例仍存在追讨工资程序复杂，牵扯部门过多，时效性差的不足。</li><li>限期改正期限规定不清晰，违法成本低。</li><li>县级以上政府设立应急周转垫付金为非强制性规定，该规定在财政状况较差的地区可能很难推行。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2019年12月4日，国务院常务会议审议通过了由司法部等部门起草的《保障农民工工资支付条例》草案。2019年12月30日国务院总理李克强签署国务院令第724号予以公布，自2020年5月1日起正式施行。&lt;br&gt;
    
    </summary>
    
      <category term="随想" scheme="https://xiaoo.ml/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="工资" scheme="https://xiaoo.ml/tags/%E5%B7%A5%E8%B5%84/"/>
    
      <category term="农民工" scheme="https://xiaoo.ml/tags/%E5%86%9C%E6%B0%91%E5%B7%A5/"/>
    
  </entry>
  
  <entry>
    <title>绩点为王：中国顶尖高校年轻人的囚徒困境</title>
    <link href="https://xiaoo.ml/2020/10/11/%E7%BB%A9%E7%82%B9%E4%B8%BA%E7%8E%8B%EF%BC%9A%E4%B8%AD%E5%9B%BD%E9%A1%B6%E5%B0%96%E9%AB%98%E6%A0%A1%E5%B9%B4%E8%BD%BB%E4%BA%BA%E7%9A%84%E5%9B%9A%E5%BE%92%E5%9B%B0%E5%A2%83/"/>
    <id>https://xiaoo.ml/2020/10/11/绩点为王：中国顶尖高校年轻人的囚徒困境/</id>
    <published>2020-10-11T03:10:00.000Z</published>
    <updated>2020-11-20T03:03:26.508Z</updated>
    
    <content type="html"><![CDATA[<p>在大学里，学生因“内卷”而迷茫，教师因找不到潜心治学的学生而苦恼。中国两所顶尖高校发生的困境是：揭开漂亮的指标、体面的成功，这些中国最聪明的年轻人在极度竞争中，成功压倒成长，同伴彼此PK，精疲力竭。<br><a id="more"></a></p><p>在古典教育中，教育的最重要功能是“认识自己”，但在现代社会，教育被赋予了“改变命运”的使命。在我们过去几十年的发展里，用教育实现阶层跃升已经成为一种惯性思维。</p><h5 id="一个大三学生的困惑"><a href="#一个大三学生的困惑" class="headerlink" title="一个大三学生的困惑"></a>一个大三学生的困惑</h5><p>看到今年高考因疫情错后一个月的新闻时，李华下意识地打量了一下光阴在自己身上的投影。两年前，他是高考最骄傲的胜利者之一，在博雅塔下如愿进入了自己心仪的学院。</p><p>高中老师们总会说：“上了大学你们就轻松了。”在他们的回忆里，大学是“下了课老师给大家递烟，大家一块儿抽”，是“把中学没睡的觉都补回去”。”李华“将信将疑”，他想，大学怎么可能这么闲呢，有那么多事等着自己去做呢。至少，他要“把中学时没精力、没能允许做的事情做一做”，“买了没看的书抽出时间读一读，每周都去独立影展或者电影资料馆看些好电影，再或者是学一门第二外语”。但进入大学后，这些打算“作为既不重要也不紧急的事情在to do list的地位不断下滑，以至于到最后几乎化成了心底的一道白月光”。</p><p>他曾向往亲密的友谊和归属感。李华记得当年清华招生组老师自揭其短，说自己学校没有团结的氛围，举的例子是“吃饭都是各吃各的，但是‘隔壁’（北京大学）就喜欢大家一块吃，很有集体氛围”。这是促成他报考“隔壁”的因素之一。可事实上，“隔壁”只是一个传说。“食堂里常见的是一桌四个座，大家谁也不认识谁。一般朋友碰上了聊两句，问问最近忙不忙，讲讲自己上什么课、做什么事情，寒暄之后就各忙各的了。微信上收到一个消息，基本都是有事儿的，没事儿谁也不主动找谁。知心朋友可能有一两个，但不是每个人都有一两个。”</p><p>这一切或许都可以用“忙”来解释。学业压力让高考的佼佼者们也苦不堪言。“以至于到现在隔着一个假期，我回到宿舍楼里，脑海中都是期末备考时逼仄压抑的噩梦氛围。”学校有寒暑两个假期，国庆和校庆还有两个9天的长假，但假期不意味着休息。大一寒假，李华作为校园媒体的记者到一个东南沿海省份采访了9天，剩下的时间忙着整理材料、组织稿件。他把大一暑假分配成两周的暑期学校、一个月的实习，以及托福考试。因新冠疫情一个国际校际交流项目取消，让他“被迫”空闲。刚刚过去的暑期，他又去做了一个多月的经济学田野调查。</p><p>忙碌了两年，当大学进入第三个年头的时候，李华觉得自己对将来的规划终于“清楚了很多”：他放弃了大二时做学术研究的打算，决定去业界寻找工作机会。为此，他计划离开北京申请一个硕士项目。对于学什么他不太在意，“只要内容不排斥，学校的牌子足够响就可以了”。实现这个目标的思路也很清晰。在大三这一年，他会重新考一次语言成绩、努力“再提一提绩点”、找一家“再好一些的实习机构”。</p><p>可是这种“清晰”却不能让李华感到踏实。自我诘问是尖锐而痛苦的：“短短的两年，我怎么会变得只考虑就业状况和学校头衔呢？”“兜兜转转做了很多事情，按理说试错也试了不少”，但只觉得“马齿徒增”，“并没有获得一种‘拥有’的确定感”。李华肯定学校在学科教学上无愧一流，“它给予了我强大的技能去应对要应对的一切”，可是，他“不快乐”，甚至于“压抑”。“或许这不是北大的问题，换在哪里都是这样的。”</p><h5 id="绩点背后的理性逻辑"><a href="#绩点背后的理性逻辑" class="headerlink" title="绩点背后的理性逻辑"></a>绩点背后的理性逻辑</h5><p>对北京大学教育学院副院长刘云杉来说，李华的困惑是一个熟悉的故事。刘云杉用了4年时间做了200多个学生的访谈，多为一对一的访谈。在这所中国顶级学府里，揭开漂亮的指标、体面的成功，这些中国最聪明的年轻人正面临普遍的困境：在极度竞争中，成功压倒成长，同伴彼此PK，精疲力竭。</p><p>“在北大和清华，一个经常被提到的名词就是‘卷’，简言之就是一种因竞争而起的精力消耗和浪费。”李华说。人人都处于经济学所说的囚徒困境中。他还记得新生入学的时候，大家都有一种期待，在琳琅满目的课表里选自己有兴趣的，“在社团里做得风生水起，搞一些大事情”。但辅导员老师、学长们很快就会让大家冷却冲动，理性地聚焦到一件事上：绩点。北京大学元培学院院长李猛曾总结：“北京大学学生的学习特点——以绩点为中心，不同层次的学生都关注绩点，关注每一门课的绩点。”</p><p>“绩点”让前途、出路这些看似还遥远的事情迅速压在刚刚从高考中脱身的孩子们身上。“不管你未来走哪一条路，绩点都是基本保障。”李华解释说，“选修双学位要看你在院系里的排名，最热门的经济学双学位或者中文双学位，没有3.6申请起来确实会比较乏力，而且要看大一的成绩。”保研首先需要被所在的院系推荐，一般来说，需要总绩点排名达到前60%。然后，还需要看接收院系的要求，这个标准在10%～40%。如果学生想去一个热门的院系，“没有3.7可能是很乏力的”。出国念书根据不同的项目有不同的要求，好学校的要求自然不会低。至于找工作，绩点是履历上最一目了然的指标。“申请实习的时候就能感觉到，有互联网大厂会要求你填写成绩在百分之几的水平。据说在金融行业，绩点直接决定了你能去什么档次的公司。”</p><p>绩点的背后是高等教育功能的变化。刘云杉是上世纪80年代的大学生。那个时代，大学生身份本身即等同于精英，是国家干部。如今，高等教育进入大众时代，学位不断膨胀、学历持续贬值，高等教育成了精英人才选拔的代理机制。</p><p>一个显著的标志是大学对学生的考核标准变了。80年代，考试评分单纯依据学生对知识与技能的掌握程度。从1998年开始，成绩评定有了优秀率和不及格率的要求。根据2007年的规定，优秀率一般不应超过30%，不及格率一般不超过10%。这个原则意味着考试评价不仅考查对知识的掌握，更要评价学生在群体学习中的相对位置，考试演变成当下同辈之间的竞争，分数成了未来竞争的工具。</p><p>在清华、北大这样的高校中，分数的厮杀自然会格外惨烈。用刘云杉的话说：“这是一个由各级各类‘状元”组成的群体。考试既是他们证成加冕的盛典，又是塑造他们心智品质、身心惯习的日常战场。身经百战的他们，个个身怀绝技，人人出手不凡。”要获胜，只能寻找窍门，不断加码。李华常遇到的一种情况是：一门课程老师要求提交3000字的论文，但是有同学发现提交5000字论文能拿到更高分数，于是所有人都卷入了字数竞争。<br>高绩点不仅要求埋头苦学，更要求理性经营，在得失之间谨小慎微地做出选择。刘云杉在研究中分析：“学年或总评学习绩点=所学课程学分绩点之和/所学课程学分之和。所有课程参与计算，就课程对绩点的贡献来看，除了学分大小有差异之外，课程的其他特征都被夷平了。”</p><p>绩点背后的逻辑从一开始就被大学新人们熟知。李华所在的学院可以在全校所有课程中做选择。他记得入学的时候，有的同学想挑战一下自己，上“三高”（数学分析、高等代数和计算概论A）或者高年级课程，“负责任的学兄学姐或者辅导员老师”就会告诉他，“这些课的难度有多大，稍有不慎会对绩点造成毁灭性的打击”。</p><p>这不是“危言耸听”。在平均绩点的计算方法下，一门课所造成的“坑”要用5门甚至10门课程的绩点去填。刘云杉访谈过一名高中读文科的经济学院学生。他的数学课程绩点没有超过2，这是一门5学分的课。本科四年，他不能申请出国，不敢修双学位，只做了一件事——孜孜不倦地挣分填坑。</p><p>大学里应运而生了一种课程，名约“水课”。有学生这样告诉刘云杉：“我们要有刷绩点的课，这就是‘水课’，上课讲讲PPT，考试考考PPT……PPT就是骗骗他，跟看电影似的，看时高兴，看完就忘，能记住多少？……我现在修了100多学分，高质量的不到20个学分。”</p><p>在被绩点统治的世界里，一个学生可能很成功，但根本没成长。刘云杉访谈过一个孩子，进入大学后，发现“课堂只教很简单的语句、规则，大量的练习需要自己下去应用、搭建。我主动性差，不愿意去学新的东西；如果设计完成一个项目，需要学习一种相匹配的新语言，我觉得好烦好难。小组共同完成的大作业，我最后做个PPT，实质贡献是零，在组里我很尴尬，别人也很尴尬。后来，我就不再选这类课了，因为我也不想拖累别人”。</p><p>在大学，他完全按照高考逻辑获得了绩点上的“成功”：“我专业的实际水平可能是倒数，但绩点一定要排在前面。大三有一门必修课，平时作业抄室友的，课程考试70%都出自往年的试卷，助教可能再出20%的新题，老师再出10%的新题。我在BBS上把能找到的试题全部打印出来，追着助教一道一道问清楚；我还巧妙地将助教出的20%考题给套出来了，最后这门课竟然得了95分！裸分第二名！我自己都惊呆了，因为我真的什么都没学会。”</p><p>同样的逻辑并不只在绩点上体现。今天的大学，学生可以做学生工作、参加各种比赛、申请出国项目、实习等等，每一项都可以出现在未来的履历上，成为日后参选社会精英的资本。是否能够学到东西、是否属于自己的兴趣范畴不再是从事这些活动的唯二评价标准，它在履历上的含金量是必须要考虑的。于是，这又成了一种“卷”，为了不落后于同学，陷于被动，每个人不得不把自己的简历尽可能地填满。</p><p>李华入学的时候，大一就参加实习可能还不是一个很普遍的现象，大多数人只是正常地过暑假，到处旅游玩一玩。现在他发现，大一实习的同学比例已经高了很多，商科同学大一暑期开始实习几乎成为标配。</p><p>学生工作也被尽可能地利用起来：每年评奖学金的时候能在综合测评里加一两分，如果学术表现不太好的话，可以有靠学工经历保研的机会。另外，一些用人单位也会看重简历中的学工、社团经历。李华的一些同学在大一时对工作没有任何兴趣，在大二突然变得积极起来。“聊起来大家可能很无奈地说，‘给自己多一条路而已’。”最近，他惊讶地发现，现在大一入学的新生就会在答疑群里表现出这方面的问题意识。“比如如何选调，中央和地方哪里好，具体的门道是怎么回事都问得一清二楚。以往很多冷门的发展道路，现在也越来越多地进入大家的视野了。”</p><p>“最头部的资源太过有限，大家为了争抢这些东西就只能在原本拥挤的赛道上争来争去。”李华说，“可能以往的同学多多少少还会走一些弯路，但是新入学的同学们在前辈的耳提面命下，几乎一上来走的就是前人试出的捷径。”捷径对应的就是“攻略”。刘云杉发现，在大学里，学生们和平级同学的关系变得疏离，但和学兄学姐的关系却变得紧密。他们之间的竞争性弱，而且后者能成为“攻略”的提供者。</p><p>几乎任何东西都有“攻略”。李华在大二的时候“想去美国顶级高校念经济学博士”，他很快就了解到实现这个目标的路径：“首先需要自己在课业上表现得非常优秀，另外还需要再额外修读几门更高深的数学和统计课程，比如实变函数、泛函分析。此外，需要比较有力的科研背景，证明自己确实是有科研能力的，包括但不限于自己独立完成的论文、给老师打工做研究助理等等。最后一个很重要的事情是，需要两到三封推荐信。国内教授写推荐信在海外的认可度有限，所以本科同学可以到美国交换一个学期，去选一些硬核的课程，通过出色的表现得到一封推荐信，或者大量给美国的教授发邮件‘套磁’，问问能否给他们做研究助理，换来一封推荐信。”</p><p>在这份“说明书”上，和“操作指南”同样重要的是“风险评估”——“非常劝退”。李华得知，经济学学术不是一个很大的领域，“之前有人讲过，要申请到最好的经济学博士项目，意味着你要在这一领域中，在全世界的竞争者中排到前100名”。</p><h5 id="标尺下的世界"><a href="#标尺下的世界" class="headerlink" title="标尺下的世界"></a>标尺下的世界</h5><p>绩点和攻略逻辑背后充满了精明和算计，外界很容易给出评判：“精致的利己主义者”。但我采访大学老师，没有一个人忍心给年轻人扣帽子。</p><p>刘云杉深知学生们面临的现实困境。从前，人们觉得中国有一批好大学，考上它们的学生都有光明的前途。去年，她去一个省招生，该省理科状元是718分，她看到考了686分的考生打算回去复读，非清华、北大不上。“这就是符号效应，如果这个符号不是足够稀缺，没有足够的荣耀、足够的市场交易能力，人们会认为这个符号是负面的标签。”</p><p>每一代孩子都背负家庭的期许，但现在的孩子背负的期许越来越沉重。从前在大学教书，刘云杉觉得自己是在和一个个学生个体打交道，但近些年，她深刻地感到，她是在和一个个家庭打交道。</p><p>有时候，处理大一大二学生的一些事务，父母甚至会亲自出面和老师交涉。这一方面是因为“过去，绝大多数父母对大学没有任何经验可以用于指导孩子，现在许多孩子是‘学二代’了，父母有更多介入的意愿和能力”；另一方面，孩子的学业越来越不是自己的事情，而是一个家庭常年持久的投资和努力。父母一方舍弃工作陪读不再罕见。</p><p>刘云杉指出，在古典教育中，教育的最重要功能是“认识自己”，但在现代社会，教育被赋予了“改变命运”的使命。在过去几十年的发展里，用教育实现阶层跃升已经成为一种惯性思维。但教育所面对的现实也在变化。</p><p>美国社会学家罗伯特·帕特南在《我们的孩子》中有一个比喻，在他的故乡俄亥俄州，1959年的那一代人就好像踏上自动上升的扶梯，站上去就能自动往上升。但半个世纪过去，当他们的孩子踏上扶梯时，它却戛然而止。“在我那一代人的成长故事中，社会结构是开放的，有一个比父母更好的未来是一个自然而然的事情，但是到了现在，更年轻一代要超过父母成为一件困难的事情。”刘云杉认为，“当下的中产阶层焦虑就在这里，即使不再要求子女如自己一代那样实现代际向上流动，也需要防止后代跌落，害怕被甩出去。教育在此，已成为一种防御性策略，不参与即出局。”</p><p>北京大学社会学教授渠敬东观察到，中小学推行素质教育以后，学校内部的课业难度降低，为了在竞争中获胜，家庭在课外寻找各类培训班，投入了大量的金钱和资源。“无论家长还是学生，小孩都知道在竞争里取得一点优势，就要花费大量的资源。所以每当取得一点优势的时候，就一定要把资源重新获得回来。”</p><p>“高校招生变成一场依据分数高低进行的拍卖，状元及其分数成为招生市场竞拍中的标的物，手持高分者待价而沽，交易的条件为高额的奖学金和所谓的热门专业。”招生部门告诉刘云杉，考生在选专业时，首先考虑的就是“用足分数”。一个孩子说：“为什么要选商学院？因为既不知道热爱什么，也不知道不热爱什么，不幸高考成绩又这么高，有什么理由违背父母期待、挑衅社会的常识？”利用规则，用精巧的计算换取自己需要的东西，这种逻辑早在大学之前就被种植在了年轻人的头脑里。</p><p>然而，这样的逻辑正将这些聪明的年轻人置于危险的境地。渠敬东总是鼓励他的学生不要追求门门功课优秀。要摆脱绩点的束缚其实也很简单：保不了研究生，考研不就完了？但是，他说服不了学生。</p><p>“自我防护的需要演化成了安全至上的意识。家长和学生都习惯了进行人生设计，奔着一个确定性而去。他们不愿冒一点风险，一定要走最稳妥的路线。他们的经验告诉他们，要抓住每一次机会，我只有抓住机会才越有机会。”渠敬东说，“可是，有竞争就意味着不是所有人都能达成目标，或者说大部分人都达不到。很多学生因此处在一种恐慌之中。我能看到一些人在逃避，比如拖延症，比如回避见老师。另一种心理机制是，你越看重当下的每一个选择，你越焦虑。一旦有一个机会没把握住，某一个台阶没上去，你会马上陷入对自己的怀疑、自责之中。我有个学生因为写一篇课程论文就会觉得压力大到喘不过气来。他觉得这篇文章没写好，他的分数就不好，分数不好影响到整个绩点，绩点不好就保不了研究生。他接受不了事情不按照预想中那样进行。”</p><p>更深刻的精神危机潜藏在一次次的自我怀疑里。张明是清华大学六字班的学生（清华“黑话”，六字班就是2016年入学的）。回想自己的成长，他觉得“小红花”是一个非常有象征意义的表现物：“从小到大，大家都在追求‘小红花’，但其实小红花本身并不蕴含任何价值，它是一个符号，象征自己胜过他人。至于获得小红花做的事情是什么，已经不重要了。当我们接受小红花的时候，其实有两个隐含的意义：我要在竞争中胜过他人，我接受这样的竞争规则。”</p><p>“对这个规则的接受在上大学之前是非常顺畅的。但进入大学之后，你马上就会发现，你手上的小红花贬值了，接着，你发现你再也无法通过不断地获得小红花来维持自己学习的意义感。”张明问过很多朋友一个问题：“当你觉得‘丧’的时候，实在是不想再动弹的时候，怎么说服自己继续努力？”“只有少部分人能一下子明白我想问什么，大部分其实是把这个问题滑过去了。后来有个朋友告诉我，其实他不是没听懂，而是不愿意去想这个问题，谁想谁抑郁。”</p><p>张明在高中时代是几乎次次拿第一的尖子生。进入大学，一开始他还能保持胜者的势头，在学院里成绩排名前10%左右。但在大一下学期的时候，他报名参加了一个校级项目的选拔，“我本来觉得稳进的，最后却落选了”。</p><p>大二的时候，他开始“感到自己并不像大一时自认为的那样有天赋”，费了很大心思交上去的作业却“被老师批得体无完肤”。一天晚上，他赶完一个DDL（校园常用语，即Deadline，截止日期），筋疲力尽地躺在床上准备睡觉，脑子里还在计划明天早上起来有哪些任务要做。“突然间我就问了自己一个问题：我为什么要每天早晨爬起来，拼命地赶DDL？如果是为了拿一个好的绩点，那我为什么要一个好的绩点？”</p><p>“我把自己问住了，我发现后面有无穷无尽的问题，结论就是曾经支持自己的那些意义其实都是虚幻的。我想从床上爬起来，下地走一走，这是我平时思考问题的习惯。可是我发现自己居然连手指都无法动弹一下，因为我甚至给不了自己一个动弹手指的理由。”</p><p>从那以后，张明看到了规则的荒谬。“那时我非常困顿的一点是，我生活中的任何一个方面，都可以在一把刻度鲜明的尺子上找到自己的位置。课程上有绩点，学生工作也有一套评定标准。志愿公益本来讲的是无我奉献，但它最后会被转化成工时。你做了300个志愿工时，就是五星志愿者；如果只做了299个，就只能是四星志愿者。甚至于你谈个恋爱，都可以获得一个评定：‘人生赢家！’我感觉到整个校园、整个社会到处都是巨大的尺子，从天连到地，所有人都在尺子上，拼命向上爬，时时刻刻能看到自己所在的位置。这太可怕了。”</p><p>在自我追问最痛苦的时候，张明考虑过自杀。最后他终于找到了一个存在的意义，那就是自己的母亲。从小到大，他和母亲相依为命。母亲文化水平不高，但是温柔智慧，通情达理。</p><p>当年轻人握着辛苦积攒的履历，去面对象牙塔外的事业选择，面对更真实的社会生活的时候，更大的落差不可避免地出现了。学生进入大三以后，清华大学新雅书院院长甘阳会找他们谈话。“我说你们一定要想清楚一个很简单的问题：你到底想做哪一种工作？工作就是三大类：从政，做公务员；到企业做管理人员或者技术人员；另外就是在大学里面做研究。三种工作的生活方式完全不一样，各有特点。而且你们一定要明白，所有的起步点都是好的，但都不是高大上的。小公务员的工作可能非常无聊，不允许你张扬个性。去企业里面，你以为去了就能做创造性工作吗？同样是日复一日，所以才有‘码农’之说。一切工作都有好有坏，都是要慢慢熬的。”之所以讲这些，是因为甘阳发现，学生们不懂自由选择就意味着放弃，“现在的小孩什么都想要，什么都想抓在手里”。</p><p>张明观察到，大家常把在同伴竞争中获得的位置和未来收入直接挂钩。有同学曾对张明这样描述自己的持续焦虑：“刚考上清华的时候觉得以后要买个上百万的车，最后却发现买房子都很艰难了。你生了孩子之后，发现仅仅维持一个正常偏上的教育水平都很昂贵！”“能在1000多万同龄人中脱颖而出进入清华、北大的我们，都是同龄人中的前千分之一，但绝大多数人进入社会之后却发现自己在社会经济地位上的排名根本达不到这样的顶尖，甚至可能因为专业限制而算不上‘出类拔萃’，曾经有多自豪，现在的失落感就有多强。”</p><h5 id="伯乐之叹"><a href="#伯乐之叹" class="headerlink" title="伯乐之叹"></a>伯乐之叹</h5><p>2005年，钱学森对到医院看望自己的时任总理温家宝说：“现在中国没有完全发展起来，一个重要原因是没有一所大学能够按照科学技术发明创造人才的模式去办学，没有自己独特创新的东西，老是‘冒’不出杰出人才。这是很大的问题。”2009年钱学森去世后，这句话被转意为著名的“钱学森之问”：“为什么我们的学校总是培养不出杰出人才？”</p><p>这是个令老师们深感苦恼的问题。大学的人才拣选变得越来越困难。刘云杉指出，卓越与平等是一对张力，由于减负与教育公平的要求，高考的难度不断降低，对人才的辨识能力被削弱。一些中学教研室专注于研究如何把知识变成具有操作性的答题方法，能够拿高分的学生越来越多。正是因为苦于这种现象，大学才开始进行以学科竞赛为基础的自主招生。但很快，大量市场化教育机构开始研究门道。</p><p>有位老师当过省招生组组长，参加过竞赛生、自主招生、科创等项目的面试。他告诉刘云杉，早几年自主招生时，经常能见到非常有特点的学生。大概从2015年开始，他就不愿意再参加了。“因为招生所面对的学生几乎是一模一样的，所有答案都一样。为什么？培训机构。现在很多孩子，包括自主招生、冬令营、竞赛中的孩子越来越会揣摩：老师你怎么想？我怎么迎合你？这很可怕。”</p><p>在被打磨成相似的“原材料”的过程里，孩子们失去了宝贵的鲜活经验和成长的多种可能性。甘阳在中山大学博雅学院当院长的时候面试学生，看到很多孩子都有钢琴十级证书，一开始他为这么多家庭都有艺术教育感到很欣喜，可深入了解后，他发现几乎没有一个孩子真的对音乐有兴趣。</p><p>从前，老师们认为最好的中学生是课外书读了很多的孩子。现在，绝大多数进入顶级高校的孩子都没有丰富的阅读经验，“真的读了很多书的，考不进来”。甘阳常常问学生中学的时候读过什么，得到的答案经常是高考有关的，要不就是“四大名著”——“我最不想听到说四大名著，都是概念性的东西，有没有真读过，我一问就知道。”</p><p>在多年的训练里，年轻人真实的学习能力被剥夺。刘云杉有种强烈的感觉，孩子们越来越不会读书。“教育最重要的是动手、动心、动脑，但他们往往只会动脑。书本里的东西需要和自己的人生经验、人生困惑结合在一起，才能变成自己的东西。很多孩子在方法上很熟练，你给他们一个复杂的文本，他们会画思维导图，拆解一套逻辑结构给你，很像那么回事，可实际上他们无法把书本和经验联系在一起。我必须让他们举两个例子，把理论变成一个故事，再用自己的话讲给我听，反复倒腾几遍，我才能确认他们是不是真的懂了。”</p><p>渠敬东感到，在被知性学习填满的成长过程里，真实的生活没有在孩子们身上留下痕迹。而让人真正成长的恰恰是生活痕迹的累积。“你为父母多做一点事，你才能慢慢体会到你们之间的亲情和孝道。你为同学做点事，你才真正知道友谊是什么。你毫无功利心地读一本书，真实地被它感动，它才能变成你的一部分。”</p><p>在匆忙的追逐中，不少孩子患上了现代人的通病：“无穷小又无限大”。“一方面，他们只盘算眼前竞争中的那点事，用无尽的精力搜寻无尽的信息，去对每一个机会作最精确的选择；另一方面，他们又学会了很多空洞的普遍概念，他们谈论人类的历史和未来，谈论美国、欧洲、阿拉伯世界里发生的事情，熟练地用一些概念给出极其抽象的判断，却很难去理解真实世界的复杂性，连身边的事情都难以丰富细致地理解和把控。”</p><p>在工具理性和成功学的浸淫下，志趣变成稀缺品。一位理科学院院长告诉刘云杉，曾有一个绩点高达3.89的学生来申请奖金学，老师们一看，几乎所有难的、具有挑战的课程，他都巧妙地回避了，所以成绩单很漂亮。老师们追问他为什么不选有挑战的课，他说，那不是他的兴趣所在。老师们又问：“什么是兴趣？”他说，兴趣就是被承认，如果不被承认，就说明没有胜任力，自然也就没有兴趣。</p><p>“我得出结论，他不是对知识感兴趣，而是对分数感兴趣，对绩点感兴趣。”这位院长说：“我坚决主张，不给他奖学金，如果我们奖励这样的学生，鼓励这样的做法，我们学校就完了。”“大学想要培养有创造性的人才，创造的前提是敢于冒风险，成功学的要义恰恰是规避风险。”刘云杉说。</p><p>其实，很多孩子不是没有拥有寻找志趣的愿望，只是愿望在现实中显得脆弱不堪。过去的大学里，至少有两种力量在帮助志趣的形成：一是“闲”。渠敬东回忆自己的大学时代，有大把的空闲时间，大家也并不认为学习成绩好就高人一等，于是，很多尝试可以无顾忌地展开。“对一个问题感兴趣，就可以把与之相关的所有书读完。这就好比谈恋爱，你觉得一个人不错，必须全情投入去追求、去相处，你才能知道你到底喜不喜欢他，你们适不适合在一起。”</p><p>二是一定的约束。“很多深刻的体验，需要全身心投入以后才能获得，这可能是一个艰苦的历练。”刘云杉说，“过去，学生没有那么多的选择。历史系啃二十四史，一本本读，一本本抄。在这个过程里，你可能就读进去了。你和历史生活在了一起，它变成了让你最自在的东西。”</p><p>如今学生们在摸索的路上患得患失。历史专业的学生告诉刘云杉，他也希望如老师所说“有定力，要专注”，“滴水穿石，做出扎扎实实的学问”，“但一看室友，都修30多学分了，我有顾虑啊，万一学问做不出来，其他路也全堵死了！……校园有各种诱惑，社会有各种压力，我什么都想占全，多数同学心态都是这样，尽可能地一直往前冲……就怕有一天，突然发现自己被整个世界淘汰了！”</p><p>李华是个“不太信邪的人”，他不选自己不感兴趣的水课，也不在期中退课，其代价是：“每次考期，复习到后半夜、一周通宵一两次都是家常便饭。北大的凌晨两点、三点、四点、五点我全都见过而且经常见到。”大二那一年，他确认自己对经济学不感兴趣。但对这种“确认”，他并不笃定。他怀疑自己其实还没有“好好地站在它面前和它接触”，“就断送了一些原本可能有的缘分”。</p><p>他曾有一段时间对哲学产生了朦胧的兴趣，觉得“老师讲的东西是有价值，也是有意思的”，可是，“那一个学期有28学分任务和课外的其他工作，每个双周我都有一个周六要从晚上9点开始写论文到后半夜，期末一页一页地背PPT。每当我回想起学习哲学或者宗教学的经历，我的脑海里总能浮现出那些应付作业的紧张时刻，这么下来确实没有任何兴致了”。</p><p>伯乐和千里马之间的彼此成就变得困难重重。“如今的师生关系更似梅贻琦所比喻的‘奏技者与看客之关系’：看客如不得其妙，趣味索然，或左顾右盼，心猿意马。”刘云杉感到，老师们的心态发生了变化。“过去，我们的老师是在寻找徒弟，心理上很亲近。现在，你经常会觉得这就是‘别人家的孩子’，或者是寄养在这里的‘养子’，人家已经很成功了，也很骄傲，他以后未必看得上你做的这个工作，不会守着你的行当，他拿到想要的东西就会走。既然只是一个暂时代为照看的关系，你得对他客客气气的，要求也不能太严格。”</p><h5 id="突围"><a href="#突围" class="headerlink" title="突围"></a>突围</h5><p>渠敬东每两三年都要带他的学生干一件事：排话剧。之所以这么做，是因为它够“慢”。排一场话剧，背台词、走台、练发音、琢磨剧本，这是一个慢的过程。“一个集体活动，我得调整一下这个人，再调整一下那个人，每个人发挥自己不同的长处，最后凝聚成一个东西。这件事快不起来。”原本，学生彼此之间很少交流，但在排演话剧的过程中，大家从竞争者的角色中解放出来，认识了更真实、丰富和生动的彼此。渠敬东很得意地告诉我：“上一个剧组谈成了三对恋爱。”</p><p>“这种快不起来的事情如果不发生在大学里，应该发生在哪里？如果不发生在教育里，应该发生在哪里？”渠敬东说，“今天的教育一定要拉慢社会的节奏和速度，让人沉下来，这样你才能在别人那里留下生活的痕迹，也让别人在你这里留下痕迹。别人既指的是书本上、历史上的那些人，也指的是身边的这些人，也有可能指的是未来的人——你如果能够学会为别人做些事，从中体会到真正的快乐，你才会有真正的未来。”</p><p>2009年，甘阳在中山大学建立博雅学院，一直致力于推行通识教育。他觉得大学必须得培养“心性”。“学生已经接受了太多的知性教育，学校变成了科学养鸡场，研究的是还能打多少激素，灯光是不是还可以再亮点，怎么刺激能让学生记住更多东西。”甘阳说，“专业教育实际是一种把人作为工具和作为手段的教育方式，现在尤其突出了专业与市场的关系，我们是在为市场所用为就业而教育。在大学里，我们在没有给予学生充分的个人人格发展的情况下，把他们推到市场的供求中去。许多外在因素使他们无法静下心来思考自己到底想要成为什么样的人，想过什么样的生活，这恰恰是一个学生在本科阶段最应该想的问题。”</p><p>新雅书院努力拉开学生和那个充满诱惑的功利世界之间的距离。学院的大一学生进行通识教育，大二可以完全自由地选择全校任何一个专业，没有任何绩点、比例限制。张明记得刚入学的时候，很多同学对这条规定都感到难以置信。很快他发现，这产生了一种奇妙的效果。“由于专业挂钩不同的高考分数，学校其实存在一种天然的专业鄙视链。但在我们内部，这种鄙视链被打破了。”</p><p>大一新生入学，甘阳都要给他们上八周的课程，讲“大学之道”。他要让他们在进入这个环境的时候，思考大学是什么，自己所处的教育环境的弊病是什么，应该在大学里得到什么。“十一”假期，每个学生都被要求回家调研自己家庭几代人的教育史，然后宿舍集体准备一份作业。一个小小的宿舍几乎就是中国的缩影。</p><p>有一个宿舍，四个人分别来自北京、省会城市昆明、非省会地级市湖南常德，以及四川广安农村。四个女孩一共调查了家里的59人。在这份家族教育史里，她们看到了男性与女性在教育机会的获得上如何变迁、农村人口如何逐渐向城市转移、职业如何向多样化发展。很多抽象的概念变得具体起来，书本和自身发生了联系。学生们也触摸到了现实世界的复杂和立体。有一次一个学生讲到了自己的大姨为家族的向上流动做出过很大的牺牲，甘阳让学生们思考：你们觉得应该批评她缺乏自主独立性，没有自由意识，还是感激她的奉献精神？</p><p>甘阳在婺源找了一个村庄、一家布鞋厂。他要求所有大一学生暑假去农村干一个礼拜的农活，去布鞋厂做一个礼拜的工人。这项活动要算绩点。学生们和他谈，说特别不乐意去。他说：“我知道你们不愿意，我认为很正常。你们，清华学生，天之骄子，你们觉得自己怎么可以劳动？我不管。”原先，甘阳在中山大学博雅学院要求的学工学农是一个月，而且没有学分。</p><p>做这件事，劳动之外有更多的考虑。“我有一种强烈的感觉，这些孩子一定要有个时间能够从他们一以贯之的生活节奏里跳脱出来。否则，他们每天想的都是DDL、绩点、评奖，生活完全被程序化了。”甘阳总建议新雅学生成立一个“发呆”协会：“拿出一段时间出去走走，坐在那发呆什么也不要想，只有这样你才能回到你自己，否则你的生活是不由自主地被一套东西推着往前走的。人人都有不得已的地方，越是不得已，越要有自我意识，越要有主动性。”</p><p>考虑之二是接地气。“这些学生从小到大，从校园到校园，外面是什么样子，不知道。很多人连猪都没有见过，猪都没有见过的人来谈农村问题是荒谬的。工都没做过一天，你谈什么公益？你知道普通工人是什么样的吗？”令甘阳印象深刻的是，中大博雅第一届有三个学生下农村的时候住在一户开饭店的人家里。于是，他们帮着洗碗、洗菜，干各种杂活。这几个学生到现在和这家人还有往来，还有感情。</p><p>工厂和农村的生活对比，还暗含着另外一层体验。学生们几乎都觉得农村比工厂好。“在工厂里，你就是一颗螺丝钉，你的一切活动是被程序安排的，你只是众多生产环节中的一个。但农民是自主的劳动者，自己安排劳作，累了可以歇一歇。他能看到自己的完整产品，是有幸福感的。”</p><p>甘阳对自己找的农村实习地点有一点特别满意：没有手机信号。于是，这些孩子们只能在闲暇时用聊天、打牌打发时间。两周下来，他们的同学感情急剧升温。这是他渴望看到的。在他的大学时代，同学相互学习带来的收获要远远超过老师。过节的时候，学院组织学生一起过节。新雅的全部学生住在一个宿舍楼，楼下有宽阔的公共空间。“这些东西平时就像空气一样，你处在其中的时候感觉不到，等你脱离了这个环境，你会突然意识到它的价值。”张明说，“越到后来我越是感激这段经历，因为我很早就在伙伴们身上看到了各种不同的可能性。”</p><p>我是在午夜时分采访的张明，他已经毕业，进入北京大学学习社会学，正在做田野调查。为期一个礼拜的调查，每天从早上8点开始工作，晚上6点结束。短暂的晚饭后，大家回顾讨论这一天的访谈，讨论研究框架直至凌晨。这是他在四年的本科结束后做的选择。</p><p>从某种意义上说，张明很感激那次精神危机，因为只有经过了彻底的怀疑，他才将自己从设定的轨道里解放了出来。他的生命历程让他对家庭问题和教育问题产生了浓厚的兴趣，最终促使他走进了社会学。我问他会不会担心未来的前途和收入。“肯定还是会想这些，但不像原来那么焦虑了。就像李克强总理说的，中国有6亿人月收入在1000元以下，相比绝大多数人我真的已经非常幸运了，焦不焦虑说到底是看自己到底想要什么，知足就好。”</p><p>有些东西比高薪更吸引他。“这个世界上有些东西是很美好的，你见过一次就再也忘不了了。”张明记得本科时上的那些课，老师们讲《理想国》、读《史记》。“你知道这些东西他们已经读过、讲过无数次了，可他们还是深深地、真诚地陶醉在里面。我虽然还无法完全领悟，但我至少见过，我知道人类的精神世界可能蕴藏怎样的幸福。”</p><p>刘云杉在北大同样见证了许多勇敢的突围者。一位学生两次延缓毕业，用6年时间完成了本科学习，经历了从自然科学到社会科学，再到人文学科的跨学科学习，最终明确了研究古典学，找到了一生从事的志业。</p><p>“我真的耗费了最宝贵的6年时间才找到真正的研究问题，最后一两年才慢慢开始知道应该如何去学习，怎样去听课，跟哪些老师学习，怎样去看书，怎样做研究，这是一个非常漫长的试错过程。”这场经历不仅是学习中的寻找，更是不断的辨析，甚至背弃家庭及社会的期待。他告诉刘云杉：“我的家庭对高等教育的期待不过是社会流动的跳板，用我们地方的老话就是‘兴盛了’，家人看你上北大了，就是要当大官了，挣大钱了……庆幸的是，这些年我的（价值观）有了很大的改变。”</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在大学里，学生因“内卷”而迷茫，教师因找不到潜心治学的学生而苦恼。中国两所顶尖高校发生的困境是：揭开漂亮的指标、体面的成功，这些中国最聪明的年轻人在极度竞争中，成功压倒成长，同伴彼此PK，精疲力竭。&lt;br&gt;
    
    </summary>
    
      <category term="随想" scheme="https://xiaoo.ml/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="绩点" scheme="https://xiaoo.ml/tags/%E7%BB%A9%E7%82%B9/"/>
    
      <category term="内卷" scheme="https://xiaoo.ml/tags/%E5%86%85%E5%8D%B7/"/>
    
  </entry>
  
  <entry>
    <title>江西传统婚礼</title>
    <link href="https://xiaoo.ml/2020/10/05/%E6%B1%9F%E8%A5%BF%E4%BC%A0%E7%BB%9F%E5%A9%9A%E7%A4%BC/"/>
    <id>https://xiaoo.ml/2020/10/05/江西传统婚礼/</id>
    <published>2020-10-05T06:10:00.000Z</published>
    <updated>2021-01-07T00:19:29.595Z</updated>
    
    <content type="html"><![CDATA[<p>倜傥但不风流的大学同学阿兴终于迫于父母之命结婚了，本科4年的同窗之谊、深圳4年的同事之情，之后我独自去成都读研2年，我们之间的交情不知不觉延续了10年之久。<br><a id="more"></a></p><p>有人说:“男人到了一定的年纪已经不再追求爱情了，事业成功的不需要爱情，事业不成功的反而害怕爱情。”等到了一定的年纪而结婚更多是为了留后代以及有个精神上的支撑。那么有多少婚姻又是出于无奈呢？<br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;倜傥但不风流的大学同学阿兴终于迫于父母之命结婚了，本科4年的同窗之谊、深圳4年的同事之情，之后我独自去成都读研2年，我们之间的交情不知不觉延续了10年之久。&lt;br&gt;
    
    </summary>
    
      <category term="摄影" scheme="https://xiaoo.ml/categories/%E6%91%84%E5%BD%B1/"/>
    
    
      <category term="婚礼" scheme="https://xiaoo.ml/tags/%E5%A9%9A%E7%A4%BC/"/>
    
  </entry>
  
  <entry>
    <title>ML Algorithm Random Forest implement in Python</title>
    <link href="https://xiaoo.ml/2020/02/19/ML%20Algorithm%20Random%20Forest%20implement%20in%20Python/"/>
    <id>https://xiaoo.ml/2020/02/19/ML Algorithm Random Forest implement in Python/</id>
    <published>2020-02-19T04:10:00.000Z</published>
    <updated>2021-01-07T02:45:54.387Z</updated>
    
    <content type="html"><![CDATA[<p>Since Covid-19 widely spreading in china, the community is locked down, tired of playing PS4, So just try something new, such as Random forest algorithm<br><a id="more"></a></p><!-- more --><!-- toc --><p>Random forest is an ensemble machine learning algorithm, It is perhaps the most popular and widely used machine learning algorithm given its good or excellent performance across a wide range of classification and regression predictive modeling problems.</p><p>It is also easy to use given that it has few key hyperparameters and sensible heuristics for configuring these hyperparameters.</p><p>It is an extension of bootstrap aggregation (bagging) of decision trees and can be used for classification and regression problems.</p><p>In bagging, a number of decision trees are created where each tree is created from a different bootstrap sample of the training dataset. A bootstrap sample is a sample of the training dataset where a sample may appear more than once in the sample, referred to as sampling with replacement.</p><h2 id="Bagging"><a href="#Bagging" class="headerlink" title="Bagging"></a>Bagging</h2><p>Bagging is an effective ensemble algorithm as each decision tree is fit on a slightly different training dataset, and in turn, has a slightly different performance. Unlike normal decision tree models, such as classification and regression trees (CART), trees used in the ensemble are unpruned, making them slightly overfit to the training dataset. This is desirable as it helps to make each tree more different and have less correlated predictions or prediction errors.</p><p>The training algorithm for random forests applies the general technique of bootstrap aggregating, or bagging, to tree learners. Given a training set X = x1, …, xn with responses Y = y1, …, yn, bagging repeatedly (B times) selects a random sample with replacement of the training set and fits trees to these samples:<br><br></p><ni>For b = 1, …, B:</ni><p>1.Sample, with replacement, n training examples from X, Y; call these Xb, Yb.</p><p>2.Train a classification or regression tree fb on Xb, Yb.</p><p> After training, predictions for unseen samples x’ can be made by averaging the predictions from all the individual regression trees on x’:</p><p><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/svg/bagging1.svg" alt=""></p><ni>or by taking the majority vote in the case of classification trees.</ni><p>This bootstrapping procedure leads to better model performance because it decreases the variance of the model, without increasing the bias. This means that while the predictions of a single tree are highly sensitive to noise in its training set, the average of many trees is not, as long as the trees are not correlated. Simply training many trees on a single training set would give strongly correlated trees (or even the same tree many times, if the training algorithm is deterministic); bootstrap sampling is a way of de-correlating the trees by showing them different training sets.</p><p>Additionally, an estimate of the uncertainty of the prediction can be made as the standard deviation of the predictions from all the individual regression trees on x’:</p><p><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/svg/bagging2.svg" alt=""></p><p>The number of samples/trees, B, is a free parameter. Typically, a few hundred to several thousand trees are used, depending on the size and nature of the training set. An optimal number of trees B can be found using cross-validation, or by observing the out-of-bag error: the mean prediction error on each training sample xᵢ, using only the trees that did not have xᵢ in their bootstrap sample. The training and test error tend to level off after some number of trees have been fit.</p><h2 id="Random-forest"><a href="#Random-forest" class="headerlink" title="Random forest"></a>Random forest</h2><p>Predictions from the trees are averaged across all decision trees resulting in better performance than any single tree in the model.</p><ul><li><strong>Regression</strong>: Prediction is the average prediction across the decision trees.</li></ul><ul><li><strong>Classification</strong>: Prediction is the majority vote class label predicted across the decision trees.</li></ul><p>Random forest involves constructing a large number of decision trees from bootstrap samples from the training dataset, like bagging.</p><p>Unlike bagging, random forest also involves selecting a subset of input features (columns or variables) at each split point in the construction of trees. Typically, constructing a decision tree involves evaluating the value for each input variable in the data in order to select a split point. By reducing the features to a random subset that may be considered at each split point, it forces each decision tree in the ensemble to be more different.</p><p>The effect is that the predictions, and in turn, prediction errors, made by each tree in the ensemble are more different or less correlated. When the predictions from these less correlated trees are averaged to make a prediction, it often results in better performance than bagged decision trees.</p><p>Perhaps the most important hyperparameter to tune for the random forest is the number of random features to consider at each split point.</p><p>A good heuristic for regression is to set this hyperparameter to 1/3 the number of input features.</p><ul><li>num_features_for_split = total_input_features / 3</li></ul><p>A good heuristic for classification is to set this hyperparameter to the square root of the number of input features.</p><ul><li>num_features_for_split = sqrt(total_input_features)</li></ul><h3 id="Random-Forest-for-Classification"><a href="#Random-Forest-for-Classification" class="headerlink" title="Random Forest for Classification"></a>Random Forest for Classification</h3><p>First, we can use the make_classification() function to create a synthetic binary classification problem with 1,000 examples and 20 input features.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># test classification dataset</span></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_classification</span><br><span class="line"><span class="comment"># define dataset</span></span><br><span class="line">X, y = make_classification(n_samples=<span class="number">1000</span>, n_features=<span class="number">20</span>, n_informative=<span class="number">15</span>, n_redundant=<span class="number">5</span>, random_state=<span class="number">3</span>)</span><br><span class="line"><span class="comment"># summarize the dataset</span></span><br><span class="line">print(X.shape, y.shape)</span><br></pre></td></tr></table></figure></p><p>We will evaluate the model using repeated stratified k-fold cross-validation, with three repeats and 10 folds. We will report the mean and standard deviation of the accuracy of the model across all repeats and folds.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> mean</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> std</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_classification</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> RepeatedStratifiedKFold</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br><span class="line"><span class="comment"># define dataset</span></span><br><span class="line">X, y = make_classification(n_samples=<span class="number">1000</span>, n_features=<span class="number">20</span>, n_informative=<span class="number">15</span>, n_redundant=<span class="number">5</span>, random_state=<span class="number">3</span>)</span><br><span class="line"><span class="comment"># define the model</span></span><br><span class="line">model = RandomForestClassifier()</span><br><span class="line"><span class="comment"># evaluate the model</span></span><br><span class="line">cv = RepeatedStratifiedKFold(n_splits=<span class="number">10</span>, n_repeats=<span class="number">3</span>, random_state=<span class="number">1</span>)</span><br><span class="line">n_scores = cross_val_score(model, X, y, scoring=<span class="string">'accuracy'</span>, cv=cv, n_jobs=<span class="number">-1</span>, error_score=<span class="string">'raise'</span>)</span><br><span class="line"><span class="comment"># report performance</span></span><br><span class="line">print(<span class="string">'Accuracy: %.3f (%.3f)'</span> % (mean(n_scores), std(n_scores)))</span><br></pre></td></tr></table></figure></p><p>We can also use the random forest model as a final model and make predictions for classification.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># make predictions using random forest for classification</span></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_classification</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br><span class="line"><span class="comment"># define dataset</span></span><br><span class="line">X, y = make_classification(n_samples=<span class="number">1000</span>, n_features=<span class="number">20</span>, n_informative=<span class="number">15</span>, n_redundant=<span class="number">5</span>, random_state=<span class="number">3</span>)</span><br><span class="line"><span class="comment"># define the model</span></span><br><span class="line">model = RandomForestClassifier()</span><br><span class="line"><span class="comment"># fit the model on the whole dataset</span></span><br><span class="line">model.fit(X, y)</span><br><span class="line"><span class="comment"># make a single prediction</span></span><br><span class="line">row = [[<span class="number">-8.52381793</span>,<span class="number">5.24451077</span>,<span class="number">-12.14967704</span>,<span class="number">-2.92949242</span>,<span class="number">0.99314133</span>,<span class="number">0.67326595</span>,<span class="number">-0.38657932</span>,<span class="number">1.27955683</span>,<span class="number">-0.60712621</span>,<span class="number">3.20807316</span>,<span class="number">0.60504151</span>,<span class="number">-1.38706415</span>,<span class="number">8.92444588</span>,<span class="number">-7.43027595</span>,<span class="number">-2.33653219</span>,<span class="number">1.10358169</span>,<span class="number">0.21547782</span>,<span class="number">1.05057966</span>,<span class="number">0.6975331</span>,<span class="number">0.26076035</span>]]</span><br><span class="line">yhat = model.predict(row)</span><br><span class="line">print(<span class="string">'Predicted Class: %d'</span> % yhat[<span class="number">0</span>])</span><br></pre></td></tr></table></figure></p><h3 id="Random-Forest-for-Regression"><a href="#Random-Forest-for-Regression" class="headerlink" title="Random Forest for Regression"></a>Random Forest for Regression</h3><p>First, we can use the make_regression() function to create a synthetic regression problem with 1,000 examples and 20 input features.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># test regression dataset</span></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_regression</span><br><span class="line"><span class="comment"># define dataset</span></span><br><span class="line">X, y = make_regression(n_samples=<span class="number">1000</span>, n_features=<span class="number">20</span>, n_informative=<span class="number">15</span>, noise=<span class="number">0.1</span>, random_state=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># summarize the dataset</span></span><br><span class="line">print(X.shape, y.shape)</span><br></pre></td></tr></table></figure></p><p>As we did with the last section, we will evaluate the model using repeated k-fold cross-validation, with three repeats and 10 folds. We will report the mean absolute error (MAE) of the model across all repeats and folds. The scikit-learn library makes the MAE negative so that it is maximized instead of minimized. This means that larger negative MAE are better and a perfect model has a MAE of 0.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># evaluate random forest ensemble for regression</span></span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> mean</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> std</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_regression</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> RepeatedKFold</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestRegressor</span><br><span class="line"><span class="comment"># define dataset</span></span><br><span class="line">X, y = make_regression(n_samples=<span class="number">1000</span>, n_features=<span class="number">20</span>, n_informative=<span class="number">15</span>, noise=<span class="number">0.1</span>, random_state=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># define the model</span></span><br><span class="line">model = RandomForestRegressor()</span><br><span class="line"><span class="comment"># evaluate the model</span></span><br><span class="line">cv = RepeatedKFold(n_splits=<span class="number">10</span>, n_repeats=<span class="number">3</span>, random_state=<span class="number">1</span>)</span><br><span class="line">n_scores = cross_val_score(model, X, y, scoring=<span class="string">'neg_mean_absolute_error'</span>, cv=cv, n_jobs=<span class="number">-1</span>, error_score=<span class="string">'raise'</span>)</span><br><span class="line"><span class="comment"># report performance</span></span><br><span class="line">print(<span class="string">'MAE: %.3f (%.3f)'</span> % (mean(n_scores), std(n_scores)))</span><br></pre></td></tr></table></figure></p><p>We can also use the random forest model as a final model and make predictions for regression. the random forest ensemble is fit on all available data, then the predict() function can be called to make predictions on new data.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># random forest for making predictions for regression</span></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_regression</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestRegressor</span><br><span class="line"><span class="comment"># define dataset</span></span><br><span class="line">X, y = make_regression(n_samples=<span class="number">1000</span>, n_features=<span class="number">20</span>, n_informative=<span class="number">15</span>, noise=<span class="number">0.1</span>, random_state=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># define the model</span></span><br><span class="line">model = RandomForestRegressor()</span><br><span class="line"><span class="comment"># fit the model on the whole dataset</span></span><br><span class="line">model.fit(X, y)</span><br><span class="line"><span class="comment"># make a single prediction</span></span><br><span class="line">row = [[<span class="number">-0.89483109</span>,<span class="number">-1.0670149</span>,<span class="number">-0.25448694</span>,<span class="number">-0.53850126</span>,<span class="number">0.21082105</span>,<span class="number">1.37435592</span>,<span class="number">0.71203659</span>,<span class="number">0.73093031</span>,<span class="number">-1.25878104</span>,<span class="number">-2.01656886</span>,<span class="number">0.51906798</span>,<span class="number">0.62767387</span>,<span class="number">0.96250155</span>,<span class="number">1.31410617</span>,<span class="number">-1.25527295</span>,<span class="number">-0.85079036</span>,<span class="number">0.24129757</span>,<span class="number">-0.17571721</span>,<span class="number">-1.11454339</span>,<span class="number">0.36268268</span>]]</span><br><span class="line">yhat = model.predict(row)</span><br><span class="line">print(<span class="string">'Prediction: %d'</span> % yhat[<span class="number">0</span>])</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Since Covid-19 widely spreading in china, the community is locked down, tired of playing PS4, So just try something new, such as Random forest algorithm&lt;br&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="https://xiaoo.ml/categories/Algorithm/"/>
    
      <category term="ML" scheme="https://xiaoo.ml/categories/Algorithm/ML/"/>
    
    
      <category term="fun" scheme="https://xiaoo.ml/tags/fun/"/>
    
  </entry>
  
  <entry>
    <title>【武汉疫情】“七宗罪”暴露无遗 北京何时问责湖北官场zt</title>
    <link href="https://xiaoo.ml/2020/02/07/%E3%80%90%E6%AD%A6%E6%B1%89%E7%96%AB%E6%83%85%E3%80%91%E2%80%9C%E4%B8%83%E5%AE%97%E7%BD%AA%E2%80%9D%E6%9A%B4%E9%9C%B2%E6%97%A0%E9%81%97%20%E5%8C%97%E4%BA%AC%E4%BD%95%E6%97%B6%E9%97%AE%E8%B4%A3%E6%B9%96%E5%8C%97%E5%AE%98%E5%9C%BA%20copy/"/>
    <id>https://xiaoo.ml/2020/02/07/【武汉疫情】“七宗罪”暴露无遗 北京何时问责湖北官场 copy/</id>
    <published>2020-02-07T05:10:00.000Z</published>
    <updated>2020-11-20T00:50:05.791Z</updated>
    
    <content type="html"><![CDATA[<p>自2003年非典（SARS）疫情以来，中国社会还从来没有一起事件，能像眼下仍在蔓延、肆虐的武汉肺炎疫情那样，让整个国家人心惶惶、提心吊胆，到处都成为死寂的空城，迫使高速流动的社会和传承数千年的热闹春节风俗骤然暂停，导致数万人被病痛折磨，给中国国家秩序和经济社会发展造成了难以估量的重创。<br><a id="more"></a></p><p>而随着越来越多的信息被揭开，世人已经普遍断定武汉肺炎疫情是一场不折不扣的人祸。分析武汉肺炎从最初发现病例、蔓延、大爆发的前后过程，可以发现不论是湖北省、武汉市主政官员，还是中国卫健委、疾控中心，都存在太多疏漏和失职，以至于造成一发不可收拾的局面。连具有官方背景的中国《环球时报》总编辑胡锡进都公开表示：“我个人认为武汉市和国家卫生管理部门对此都负有责任。”</p><p>具体而言，对于中国卫健委、疾控中心来说，它们身为医疗卫生领域的专业管理部门，理应及时向政府作出政策建言，向公众发出预警，可遗憾的是，直到1月20日抗击非典第一功臣、著名呼吸病学专家钟南山院士揭开疫情具有“人传人”的真相之前，它们在公众眼里几乎什么都没有做，任由疫情恶化。可事实上，2019年12月31日国家卫健委就已派出第一批专家组来武汉调研并指导疫情处置，期间不可能不知道疫情真相，但还是毫无作为。而据后来多家媒体披露的消息，国家疾控中心的一众专家型官员大概率在1月初就已经知道武汉肺炎人传人的真相，却没有公之于众，而是自私地谋取学术成果，忙着在《新英格兰医学杂志》（NEJM)等海外顶级医学期刊发表论文，造成海外不少业内人士都知道武汉肺炎真相、中国大众却毫不知情的讽刺一幕。尽管后来中国疾控中心出面澄清，但解释模糊，难以服众。究竟真相如何，有待中国官方彻查，给世道人心一个交代。</p><p>对于湖北省和武汉市的主政官员而言，至少存在“七宗罪”。第一，应对不及时，严重不作为，错过黄金时间。目前披露的信息显示，2019年12月1日武汉市就已经出现第一例不明肺炎患者。据专门收治肺炎患者的武汉市金银潭医院院长张定宇说法，12月29日、30日左右，随着转诊的病人逐渐增加，他就“觉得这个疫情可能有些严重，有点超出我们当初的想象”。可直到1月20日钟南山院士揭开真相之前，整整50余天时间里，从武汉市到湖北省的各级官员，没有人站出来采取果断措施，一再贻误时机，错过最佳应对时间，最终致使肺炎疫情大爆发。</p><p>第二，刻意隐瞒真相，发布不实信息。公开新闻显示，武汉市卫健委首度披露不明肺炎病例是12月31日，而那时距首次发现不明肺炎病例已过去了30天。而且目前已经有越来越多的信息证实，早则2019年12月底、晚则1月初，武汉市一些医生就已经预感到疫情严重性并报给了上级部门。比如，武汉大学中南医院重症医学科主任彭志勇在接受《财新》采访时表示，他早在1月初就已经预判“很可能会传染别人”并报告给了武汉市卫健委。可面对如此严重的潜在危机，不论是武汉市官员还是湖北省官员，非但没有及时发布消息，反而还罔顾人民的知情权，隐瞒真相，一直强调“可防可控”、“未见人传人”。一直到1月20日钟南山院士揭开真相前夕，武汉市的说法还是“不能排除有限人传人可能，持续人传人的风险较低”。尤其令公众难以接受的是，从2020年1月5日到2020年1月16日，由于恰逢湖北和武汉的地方“两会”召开时间，武汉市卫健委的通报中没有新增一例确诊病例。这样的失职令公众失去必要的警觉之心，加剧疫情蔓延。</p><p>第三，滥用公权力，造成知道真相的前线医生不敢言。2019年12月底武汉市8名医生出于提醒同为临床医生的同学注意防护的考虑，在医生群里发布消息说“确诊了7例SARS”。结果1月1日这8名医生被武汉警方处置为造谣者，遭到传唤和训诫。在这种压力下，武汉市前线医生普遍噤声，只能按照官方规定谨慎发言。对此，中国最高人民法院专门发文分析称：“事实证明，尽管新型肺炎并不是SARS，但是信息发布者发布的内容，并非完全捏造。如果社会公众当时听信了这个‘谣言’，并且基于对SARS的恐慌而采取了佩戴口罩、严格消毒、避免再去野生动物市场等措施，这对我们今天更好地防控新型肺炎，可能是一件幸事。”</p><p>第四，在疫情如此严重的情况下，还毫无防护地举办大型活动。1月18日武汉江岸区百步亭社区举行了4万余家庭参与的“万家宴”活动，结果2月5日的新闻显示该社区确诊多例新冠肺炎，其中一小区55栋楼中33栋有发热病人。1月20日武汉市文化和旅游局准备发放20万张文旅惠民券，鼓励市民大年初一到十五免费游览黄鹤楼、东湖灯会、东湖梅园、欢乐谷等文旅景区（场馆），后在一片骂声中紧急叫停。1月21日湖北省官方举行大型春节团拜会文艺演出。诸如此类的大型活动，只能说明湖北省、武汉市官员的防护意识之差和不作为，令人诧异。</p><p>第五，湖北省和武汉市的红十字会，官僚主义严重，效率低。武汉肺炎疫情大爆发后，湖北省、武汉市和中国民政部均规定，由湖北省、武汉市的红十字会来统一接受和管理捐赠物资。坦率说，为了便于管理、确保捐赠物资的质量，由红十字会来统一负责有其合理性，但前提应该是红十字会具有高效、一流的能力。但令人失望的是，在武汉乃至湖北省大量医院频频出现医疗防护用品告急，向外界发出求援信息后，来自各地的大量捐赠物资竟然一度因为湖北省、武汉市红十字会的傲慢和低效、繁琐审批程序而不能及时发放。更令人不可思议的是，在湖北省、武汉市红十字会发放的医疗物资中，起初不在肺炎疫情定点医院名单之中、以整形和生殖为主业、医护人员较少、莆田系的仁爱医院竟能收到1.8万只KN95口罩，而作为抗击疫情主力、拥有医护人员8，000余名的协和医院却只收到3，000只普通口罩。尽管后来在网络民意群情激愤下，湖北省已经问责了红十字会三名中层干部，但红十字会在中国人心中的形象和公信力由此已经直线下坠，不可不反省。</p><p>第六，疫情大爆发后，应对缓慢，甚至不及疫情相对较轻的其它省市。湖北省、武汉市应对疫情的步伐一直滞后于病毒蔓延。1月20日，中国国家主席习近平、国务院总理李克强作出批示，国务院召开常务会议后，湖北省、武汉市才成立新型冠状病毒感染的肺炎疫情防控指挥部。1月22日，作为肺炎疫情重灾区的湖北省才启动突发公共卫生事件二级应急响应。而1月23日，疫情远比湖北轻的浙江、广东、湖南等多个省市已经陆续启动一级应急响应。或许是在外界压力下，1月24日湖北省才后知后觉地启动一级应急响应。从近年来中国官场一直强调守土有责、落实属地管理责任来看，湖北省应对肺炎疫情的表现明显不及其它省市。</p><p>第七，湖北省、武汉市官员在应对肺炎疫情时荒腔走板、手足无措，决策时考虑不周、“头痛医头”，统筹协调混乱不堪。湖北省委书记在记者会上只顾着念稿子，答非所问，备受争议。湖北省长在武汉封城时口口声声承诺“物资储备和市场供应是充足的”，结果迅速传出武汉乃至整个湖北省物资短缺的消息，尤其是医疗物资严重供应不足。武汉市委书记在描述工作心态时，虽然表示了“内疚、愧疚、自责”，但在意的只是让“党中央、国务院操心”，而不是给武汉市民带来的严重伤害。武汉市长在承认“预警不够”时，却推脱要有“授权之后才能披露”。</p><p>因为前期组织协调的混乱和决策时严重考虑不周，武汉市医院床位非常短缺，以及公共交通突然暂停带来的交通不便，大量身上可能携带病毒的疑似患者除了部分可以侥幸坐上出租车前往医院，许多要么由于前往医院不便、确诊难而只能困在家中自求多福，要么只能忍着身体不适，徒步或骑自行车前往医院。纵使去了医院，一些疑似患者因为医院床位和防护用品不够而被迫辗转于多家医院都未能被收治，其内心的焦虑、失望和痛苦，令人心酸。而这些可能携带病毒的肺炎疑似患者，只要一天不被隔离和收治，就有可能在外出过程中，将病毒传染给更多的人。</p><p>以上七点是湖北省、武汉市官员在应对肺炎疫情时存在的疏漏和失职。因为他们的严重疏漏和失职，以及国家卫健委、疾控中心的不作为，共同酿成了这起大劫乱。虽然为解决肺炎疫情危机，中国已经全速开动了整部国家机器，以中国体制内在的社会动员能力，迟早能将疫情成功遏制，但难免会为此付出极为惨重的代价。</p><p>2月3日中共最高决策层召开政治局常委会指出：“在疫情防控工作中，要坚决反对形式主义、官僚主义，让基层干部把更多精力投入到疫情防控第一线。对党中央决策部署贯彻落实不力的，对不服从统一指挥和调度、本位主义严重的，对不敢担当、作风漂浮、推诿扯皮的，除追究直接责任人的责任外，情节严重的还要对党政主要领导进行问责。对失职渎职的，要依纪依法惩处。”显然，湖北省、武汉市和国家卫健委、疾控中心的相关官员，正属于理应要被依法问责的主要对象。</p><p>鲁迅文学奖获得者、湖北省作家协会原主席方方，日前表示“武汉官方前期对疫情的轻慢和封城前后的手足无措，造成了百姓巨大的恐慌，给所有武汉人带来伤害”，“对于渎职者不作为者不负责者，我们必须一层一层追究”。或许有人会说，现在正值防范疫情的关键时刻，不宜临阵换将，但问题是如果此“将”已经造成民怨四起，应对失策，根本没有能力控制疫情，那为了军心稳定和早日控制疫情，能不换将吗？须知，2003年非典肆虐时，中国政府不也曾严厉问责时任北京市长和卫生部长，换上了更有担当、魄力和作为的王岐山来安抚人心和应对疫情吗？更何况以近期尤其是2月6日主管卫生的中国副总理孙春兰在武汉要求“举全市之力入户上门排查‘四类’人员”，“要不落一户、不漏一人”，“战时状态决不能当逃兵，否则就会被永远钉在历史的耻辱柱上”来看，她已经事实上接管了湖北省和武汉市的疫情防控工作，她也更有权威和能力来应对疫情。非常时期，当有非常作为。不论是为了安抚已经沸腾的民怨，重建政府公信力，还是为了成功控制疫情，中国政府都应尽早采取果断措施，依法问责和惩处失职官员。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自2003年非典（SARS）疫情以来，中国社会还从来没有一起事件，能像眼下仍在蔓延、肆虐的武汉肺炎疫情那样，让整个国家人心惶惶、提心吊胆，到处都成为死寂的空城，迫使高速流动的社会和传承数千年的热闹春节风俗骤然暂停，导致数万人被病痛折磨，给中国国家秩序和经济社会发展造成了难以估量的重创。&lt;br&gt;
    
    </summary>
    
      <category term="随想" scheme="https://xiaoo.ml/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="新型肺炎" scheme="https://xiaoo.ml/tags/%E6%96%B0%E5%9E%8B%E8%82%BA%E7%82%8E/"/>
    
      <category term="疫情" scheme="https://xiaoo.ml/tags/%E7%96%AB%E6%83%85/"/>
    
      <category term="2020" scheme="https://xiaoo.ml/tags/2020/"/>
    
  </entry>
  
  <entry>
    <title>时间与人生——跨入本世纪20年代的随想zt</title>
    <link href="https://xiaoo.ml/2020/01/01/%E6%97%B6%E9%97%B4%E4%B8%8E%E4%BA%BA%E7%94%9F%E2%80%94%E2%80%94%E8%B7%A8%E5%85%A5%E6%9C%AC%E4%B8%96%E7%BA%AA20%E5%B9%B4%E4%BB%A3%E7%9A%84%E9%9A%8F%E6%83%B3/"/>
    <id>https://xiaoo.ml/2020/01/01/时间与人生——跨入本世纪20年代的随想/</id>
    <published>2020-01-01T02:10:00.000Z</published>
    <updated>2020-12-02T03:38:47.568Z</updated>
    
    <content type="html"><![CDATA[<p>今天已经是2020年了。曾几何时，大伙儿还在迎接千禧年；如今一转眼，21世纪都已经过了五分之一。有感于此，今天这篇博文就来聊聊【时间与人生】这个话题。<br><a id="more"></a></p><!-- toc --><h5 id="噪声-VS-信号"><a href="#噪声-VS-信号" class="headerlink" title="噪声 VS 信号"></a>噪声 VS 信号</h5><p>最近几年，俺在博文中多次提及【信噪比】。之前的讨论都是以“媒介形态”作为切入点；今天换个角度，以【时间】作为切入点。</p><p>股神巴菲特曾经说过（大意是）：他自己【从不】关心股票每天的“实时行情”。</p><p>为啥捏？稍微了解巴菲特的同学应该都知道——他的投资理念来自于本杰明·格雷厄姆创立的【价值投资理论】。对他而言，“实时行情”的波动，包含了大量随机性的市场因素（技术行话叫“背景噪声”）。由于“背景噪声”的【干扰】，（对他而言）“实时行情”缺乏参考价值。</p><p>但如果你上升到更大的时间颗粒度，比如说考察某个股票走势的“周线、月线、甚至年线”，那么趋势就会显现出来。因为在更大的时间尺度，背景噪声滤掉了；因此，信噪比提升了，也就更容易看清趋势。</p><p>那么，这个例子与“人生”有啥关系捏？</p><p>每个人的一生，都会经历许许多多事情。其中有很多事情，当时你觉得很重要；但等到10年20年之后，再次回顾此事，你可能会发觉——此事对你的人生根本无足轻重（只不过是【噪声】）。</p><p>前几年有个新闻——某年轻人为了买 iPhone 手机而不惜“卖肾”；类似的新闻还包括——为了买高档化妆品而不惜“卖卵”……</p><p>等过了10年20年之后，再来回顾上述事情，当事人会怎么想？</p><p>当然，还会有【相反】例子——有些事情，刚开始你觉得不是那么重要。但在10年20年之后，你发现当时不起眼的事情极大地改变了你的人生。</p><p>对俺而言，最典型的例子就是2009年开博。当时并没有什么感觉；写博几年后开始意识到——这个博客对俺很重要（最起码，维护这个博客的过程极大提升了个人综合能力）</p><h5 id="短寿命-VS-长寿命"><a href="#短寿命-VS-长寿命" class="headerlink" title="短寿命 VS 长寿命"></a>短寿命 VS 长寿命</h5><h6 id="1-“生命周期”的分布，高度【不】平均"><a href="#1-“生命周期”的分布，高度【不】平均" class="headerlink" title="1.“生命周期”的分布，高度【不】平均"></a>1.“生命周期”的分布，高度【不】平均</h6><p>在刚开博的头一年（2009），俺曾经写过一个系列叫做《无处不在的二八原理》。“二八原理”为啥无处不在捏？因为大部分领域都是【不平均】分布滴。“生命周期的分布”也是如此。</p><p>比如说，让你回忆上个月看过的新闻，你能想起几条？你能想起的数量，相比你上个月看过的所有新闻的总数，只是一个很小比例。而这还仅仅是“一个月前”；如果跨度是“一年前”，这个比例无疑会更低。</p><p>再比如说，每年都会有大量的书籍出版。过了十年之后，这些书籍中的 99% 都会被人淡忘（99% 都还是保守的说法，实际比例应该更高）。</p><h6 id="2-基于时间的检验"><a href="#2-基于时间的检验" class="headerlink" title="2.基于时间的检验"></a>2.基于时间的检验</h6><p>刚才说到书籍。有些读者寄希望于“畅销书排行版”，想通过这类排行版来找出那些【持久性】的著作。但这个方法也【不一定】靠谱。不信的话，你可以去查10到20年之前的“畅销书排行版”。里面的很多作品，如今已经完全被遗忘了。</p><p>“畅销书排行版”是经过严格筛选的一个很小的范围。如果连它都无法保证长寿命，那其它方法恐怕就更难保证了。所以，俺认为真正靠谱的就是——留给时间来检验。</p><h6 id="3-俺的经验"><a href="#3-俺的经验" class="headerlink" title="3.俺的经验"></a>3.俺的经验</h6><ul><li><b>书籍</b><br>比如俺分享的电子书，对于【思想性、理论性】的著作，俺通常倾向于分享该领域权威学者的代表作。某个学者能成为某领域公认的权威，（对其本人而言）已经具备了时间的检验；而如果此书又是此人的代表作，相当于具备了【双重的】时间检验。靠谱程度当然就高得多。</li></ul><ul><li><b>视频（电影 ＆ 电视剧）</b><br>博客的老读者都晓得，俺很少看视频。<br>在本人看过的为数不多的影片中，大都是上映 N 年之后才去看的。如果某个片子在上映了5到10年之后，依然有很好的口碑，俺才会考虑（注：这是俺看此片的“必要条件”，但不是“充分条件”）<br>这个习惯帮俺规避了很多的烂片，因此也节省了很多的时间。</li></ul><ul><li><b>IT 技术（软件、编程语言、库、协议……）</b><br>很多年轻的技术人员，很喜欢追逐最新出现的技术。老实说，俺年轻的时候，也是如此。<br>在 IT 领域混了这么多年，俺学过很多【昙花一现】的技术（学过之后不久，这个技术就消亡了）。后来，俺慢慢懂得了【等待 ＆ 观望】。<br>顺便说一下：对新技术的“等待 ＆ 观望”，有一定的技巧。由于这个话题局限于 IT 领域，另外找时间聊。</li></ul><h5 id="娱乐至死-VS-独善其身"><a href="#娱乐至死-VS-独善其身" class="headerlink" title="娱乐至死 VS 独善其身"></a>娱乐至死 VS 独善其身</h5><h6 id="1-心理舒适区"><a href="#1-心理舒适区" class="headerlink" title="1.心理舒适区"></a>1.心理舒适区</h6><p>如今这个互联网时代，有时候也被称作【娱乐至死的时代】。大部分人把大部分的业余时间都浪费在消遣性的内容。这可不是俺耸人听闻——你稍微留意身边的亲戚、朋友、同事。大部分人的大部分上网时间都是用于【消遣】（除了“娱乐新闻”，那些“搞笑视频、购物、闲聊…”也都属于消遣）。</p><p>这种现象可以很容易地用心理学加以解释——其关键在于【心理舒适区】（洋文称之为“comfort zone”）。当你进行任何消遣性的活动，你就处于【心理舒适区】。顾名思义，在这个状态下，你会觉得比较放松、舒服、惬意。</p><p>互联网的普及，尤其是 SNS（社交网络）的普及，使得每个网民更容易获得各种娱乐性/消遣性的内容——也就更容易陷入相关的【心理舒适区】。</p><p>另外，SNS 背后的【商业公司】也在推波助澜。因为每一个 SNS 平台都希望能最大化【用户粘性】。通俗地说，每个 SNS 平台都希望其用户终日泡在上面。所以，每个 SNS 平台都会采用各种手段（尤其是心理学手段）来留住用户，增加你对该平台的【依赖】。</p><h6 id="2-自控力（意志力）"><a href="#2-自控力（意志力）" class="headerlink" title="2.自控力（意志力）"></a>2.自控力（意志力）</h6><p>要想跳出（脱离）“心理舒适区”，你需要动用【自控力】（也称“意志力”）。“自控力”这个玩意儿就像是肌肉——能够通过锻炼进行强化，也会因为长久不用而弱化。而且这个玩意儿还是【稀缺资源】，很容易被其它因素消耗掉；并且一旦耗尽，【无法】立即恢复（需要一定的时间才慢慢恢复）。</p><p>（注：关于“自控力”，现代心理学已经有足够多的研究，并通过实验数据支持上述说法，具体参见下一段的“引申阅读”）</p><p>由于上述这两者的特点，如果某人总是处于“心理舒适区”，其“自控力”总是得不到锻炼，就会更加弱化；而自控力弱化之后，就更容易停留在心理舒适区。久而久之，形成一个负面的正反馈（俗称“恶性循环”）。</p><h6 id="3-“消遣性内容”的【毒性】"><a href="#3-“消遣性内容”的【毒性】" class="headerlink" title="3.“消遣性内容”的【毒性】"></a>3.“消遣性内容”的【毒性】</h6><p>很多人【低估】了“消遣性内容”的【危害性/危险性】。他们误以为——这些东西仅仅是浪费时间。</p><p>实际上，比“浪费时间”更危险的是【成瘾性】。只要你理解了前一个小节所说【恶性循环】，也就能理解这个玩意儿的【成瘾性】。</p><p>如果根据事物的【损益程度】进行归类，所有事物大致可以分类为：</p><p>1.对你有益的</p><p>2.对你无益也无害的</p><p>3.对你有害的</p><p>而“消遣性内容”很明显属于【有害】的这类，也就是本小节标题所说的“毒性”</p><h6 id="4-换个角度思考"><a href="#4-换个角度思考" class="headerlink" title="4.换个角度思考"></a>4.换个角度思考</h6><p>“娱乐至死的时代”当然让人感到悲哀。但如果你换一个角度看问题，或许就【没】这么悲哀了</p><p>当大部分人都沉迷于心理舒适区，只要你能跳出来，（在很多方面）你都更容易脱颖而出。换句话说，你就获得了巨大的【个人竞争优势】。</p><h5 id="多-VS-少"><a href="#多-VS-少" class="headerlink" title="多 VS 少"></a>多 VS 少</h5><h6 id="1-软件开发的例子"><a href="#1-软件开发的例子" class="headerlink" title="1.软件开发的例子"></a>1.软件开发的例子</h6><p>很多程序员（尤其是入行不久的新手）容易陷入一个【误区】——以为懂的编程语言越多，能力就越强。</p><p>为啥说这是个【误区】捏？因为他们只看到了“编程语言”，而忽视了【编程范式】（洋文叫做“programming paradigm”）。</p><p>（注：对于不懂软件开发的读者，稍微解释一下——【编程范式】相当于是指导编程的“思想、方法论、套路…”）</p><p>“编程语言”有成百上千种，而“编程范式”只有大约十多种。再次回顾前面章节提及的【DIKW 模型】，“编程范式”才是真正意义上的 W（智慧）。</p><p>最近这几年，经常有读者在博客评论区询问俺关于“编程语言 ＆ 如何编程”的话题。俺多次引用了 IT 大牛 Alan Perlis（【第一个】图灵奖得主）的名言——不能影响你编程观点的语言，不值得你去学！</p><p>如何理解他这句话捏？</p><p>假设某个程序员已经掌握了“A语言”，然后又想去学习“B语言”。但如果“B语言”用到的【编程范式】“A语言”都已经有了，那就不值得再学“B语言”（注：因为工作需要而去学，另当别论）。</p><p>他这句话还可以【反过来理解】——那些能够极大影响你编程观点的语言，非常值得你去学。</p><p>这也就是为什么——IT 大牛保罗·格雷汉姆在其代表作《黑客与画家》一书中大力推荐 Lisp 的缘故。Lisp 语言（Lisp 家族）涵盖了【最多】的“编程范式”；甚至可以这么说——【所有的】“编程范式”都可以在 Lisp 家族中找到。</p><h6 id="2-【舍本逐末】的现象"><a href="#2-【舍本逐末】的现象" class="headerlink" title="2.【舍本逐末】的现象"></a>2.【舍本逐末】的现象</h6><p>有个成语叫做【舍本逐末】。那些只注重“编程语言”而忽视了“编程范式”的程序猿/程序媛，就是典型的【舍本逐末】。</p><p>【舍本逐末】的现象，当然【不】仅仅出现在编程领域。几乎每一个领域，都有人在不断地犯类似错误。</p><p>在每一个领域，都存在“本/末”的差异——</p><p>所谓的“本”就是指那些“比较基础、比较本质、比较核心”的东东；所谓的“末”就是那些“比较表象、比较边缘”的东东；</p><p>“末”很多，而“本”很少；</p><p>掌握“末”比较容易，而掌握“本”比较难；</p><p>（对某个领域而言）虽然“本”很少，但你对每一个“本”的掌握，都有助于你在该领域达到一个更高的 level；相比之下，如果你只掌握了很多“末”，而没有掌握“本”，你在该领域的水平很难有【实质性】提升。</p><h5 id="快-VS-慢"><a href="#快-VS-慢" class="headerlink" title="快 VS 慢"></a>快 VS 慢</h5><h6 id="1-“舍本逐末”的原因"><a href="#1-“舍本逐末”的原因" class="headerlink" title="1.“舍本逐末”的原因"></a>1.“舍本逐末”的原因</h6><p>为啥很多人会犯【舍本逐末】的错误捏？原因有很多，至少包括如下：</p><ul><li><p><ni>原因1：</ni><br>对该领域缺乏【系统性】了解，自然无法判断哪些是“本”，哪些是“末”。</p></li><li><p><ni>原因2：</ni><br>（如前一个章节所说）掌握“末”比较容易，比较快；而掌握“本”比较难，比较慢。很多人为了“求快”，于是就会【舍本逐末】</p></li></ul><h6 id="2-欲速则不达"><a href="#2-欲速则不达" class="headerlink" title="2.欲速则不达"></a>2.欲速则不达</h6><p>所谓的“求快”，说得更直白一些就是【急功近利】。不得不说，如今的很多年轻人都有这个毛病。</p><p>当然啦，会有很多年青的读者抱怨说：如今的生存压力这么大，不得不追求功利。比较搞笑的是，这里存在一个充满反讽意味的怪圈——越是急功近利的人，反而越【得不到】功利。多年前，俺曾经写过一篇《为啥急功近利反而赚不到钱——给拜金主义者的忠告》，说得就是这个意思。</p><p>“求快”的人只满足于快速掌握某个领域的“枝节”；快虽然快，但因为【没】掌握本质性的东西，（在该领域的）水平无法得到显著的提升，因此在该领域就无法具备足够的竞争力。套用天朝的一句老话叫做——【欲速则不达】。</p><h6 id="3-慢即是快"><a href="#3-慢即是快" class="headerlink" title="3.慢即是快"></a>3.慢即是快</h6><p>作为对比，那些愿意花足够的时间与精力去搞定【基本功】，打好【基础】的人，刚开始好像很慢，但后续的加速度会越来越快。这个过程有点类似“指数函数”。这类函数在刚开始的时候，斜率很小（甚至很接近于【零】），而且初期的增长趋势很类似“线性函数”；但在某个【转折点】之后，其斜率会急剧上升，并大幅度超越“线性函数”。</p><p><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/exponential_function.png" alt=""></p><h5 id="边际递减-VS-边际递增"><a href="#边际递减-VS-边际递增" class="headerlink" title="边际递减 VS 边际递增"></a>边际递减 VS 边际递增</h5><p>刚才既然聊到指数函数，再顺便引出“斜率”的话题。</p><h6 id="1-边际递减（斜率变小）"><a href="#1-边际递减（斜率变小）" class="headerlink" title="1.边际递减（斜率变小）"></a>1.边际递减（斜率变小）</h6><p>法国作家罗曼·罗兰在其代表作《约翰·克里斯朵夫》中有句名言，俺印象深刻，并加入到博客副标题的动态格言中。这句话是：</p><blockquote><p>到30岁就已经过完自己的一生；</p></blockquote><p>一过了这个年龄段，他们就变成自己的影子，以后的生命只是在不断重复自己…</p><p>假如存在某种方法，能绘制出每个人的“能力-时间曲线”（综合能力随时间变化的曲线）。俺充分相信，大部分人都是“边际【递减】函数”（斜率持续变小）。而且很多人可能在30岁之前，该函数的斜率就已经趋向于零（接近于水平线）。如果你充分理解本文前面章节所说的这些，也就能理解——为啥大部分人的能力曲线属于“边际【递减】”。</p><ni>注：考虑到某些读者可能会来抬杠，俺先说明一下——</ni><p>要想比较全面地评价某个人的综合能力，需要用【矩阵】才能充分地表达；而【不可能】约化成某个“标量”。因此，上述比喻严格来讲是有缺陷滴。</p><p>但考虑到本博客读者群体的差异化（有些读者只是初中生），俺还是【不】引入“矩阵”相关的讨论，否则会把很多人吓跑。</p><h6 id="2-边际递增（斜率变大）"><a href="#2-边际递增（斜率变大）" class="headerlink" title="2.边际递增（斜率变大）"></a>2.边际递增（斜率变大）</h6><p>前一个小节说的是——绝大部分人的变化属于“边际递【减】”。</p><p>但还有一小撮人，他们的能力曲线竟然是“边际递【增】”。为啥会这样捏？同样是因为互联网。</p><p>在互联网【没】出现之前，要想让“个人能力曲线”达到“边际递【增】”是非常非常难滴！有了互联网之后，大部分人沉迷在【娱乐至死】的状态，但少数【没有】沉迷其中的人，如果善于学习（尤其是“系统性学习”），如果充满求知的欲望，如果运气还不算太差……在互联网这个大环境下，完全有可能达到“边际递【增】”的状态。</p><p>某些不那么聪明的读者，可能会觉得纳闷——能够保持“能力曲线”的斜率已经不错了，为啥有些人还能做到“斜率递【增】”？</p><p>这其中的奥妙，俺已经在《为什么独立思考这么难？——谈谈心理学的成因，并分享俺的经验》一文中提到过了。“学习能力 ＆ 思维能力”类似于“自控力”，也是可以通过锻炼而强化。</p><p>那些喜欢学习的人（尤其是喜欢【跨领域 ＆ 系统性】学习的人），这几方面的能力会不断强化；而且喜欢学习的人，通常也能体会到【学习的乐趣】，于是又增加了一个新的【正反馈】。</p><p>上述诸多因素，使得“能力曲线”的斜率递【增】。</p><h6 id="3-“中年职场危机”的根源"><a href="#3-“中年职场危机”的根源" class="headerlink" title="3.“中年职场危机”的根源"></a>3.“中年职场危机”的根源</h6><p>如果你理解了大多数人的能力曲线是这种性质，就有助于理解【中年职场危机】的本质——</p><p>刚工作的年轻人，大都单身（未婚），没小孩，不用顾家（一人吃饱全家不饿）。而且身体好，能承受高强度工作压力，对薪酬要求也没那么高；</p><p>（同一个人）到了中年，通常已婚，大都有小孩，多半要养家，身体也没有以前那么好，无法承受高强度工作压力，而薪酬水平的要求却增加了很多（相比年轻时）。</p><p>简而言之，中年员工在“成本 ＆ 健康”方面，都变差了（优势下降了）；如果“综合能力”的提升无法抵消上述这两者的下降，（在上司或老板眼里）这个人的【性价比】就下降了——这也就是“中年职场危机”的主要根源。</p><p>但对于那一小撮能够达到“边际【递增】”的人，他们的性价比不但没下降，反而上升了——自然【不】存在所谓的“中年职场危机”。</p><h6 id="4-关于“工作年限”的【误区】"><a href="#4-关于“工作年限”的【误区】" class="headerlink" title="4.关于“工作年限”的【误区】"></a>4.关于“工作年限”的【误区】</h6><p>很多人常犯的一个【错误】是——以【线性】的方式思考问题。容易犯这个错误的人，也就容易把“工作年限”混淆为“综合能力”。</p><p>但实际情况是——“工作年限”【不】等于“工作经验”；“工作经验”也【不】等于“综合能力”。</p><p>比如说：对某些工作岗位（工种），由于其工作的性质＆内容是【高度重复】滴，“工作1年”与“工作10年”，积累的经验其实没啥区别。</p><p>再比如说：某些行业的工作，虽然有足够大的差异化，从而使得“工龄”能够转化为“工作经验”，但这些经验是高度【局限性】滴（只能用于该领域）。一旦该行业（领域）被颠覆，这些人之前积累的工作经验（行业经验）就再也没有用武之地了。换句话说，这些人虽然积累了足够多的经验，但依然很脆弱。他所在的行业如果被摧毁了，他的职业生涯也跟着完蛋了。</p><p>在“综合能力”里面，那些【真正重要】的成分，通常是【跨行业/跨领域】滴！而且不受年龄限制（可以受用终身）。</p><h5 id="越来越差-VS-越来越好"><a href="#越来越差-VS-越来越好" class="headerlink" title="越来越差 VS 越来越好"></a>越来越差 VS 越来越好</h5><h6 id="1-互联网的马太效应"><a href="#1-互联网的马太效应" class="headerlink" title="1.互联网的马太效应"></a>1.互联网的马太效应</h6><p>在上一个章节，俺提到互联网对两类人导致完全相反的影响。某些聪明的读者应该已经猜到——俺要开始聊【马太效应】了。</p><h6 id="2-【科技】的马太效应"><a href="#2-【科技】的马太效应" class="headerlink" title="2.【科技】的马太效应"></a>2.【科技】的马太效应</h6><p>难道只有互联网才导致“马太效应”吗？当然不是！</p><p>严格来讲，任何一种科技，只要其【普及性 ＆ 影响力】达到一定的水平，都会引发“马太效应”。互联网导致的“马太效应”如此之明显，主要是因为互联网的影响力实在太大了（渗透到每个行业，渗透到社会的每个层面）。</p><p>为啥科技会引发“马太效应”捏？这里面当然有很多原因，而且会牵涉到很多不同的领域（包括人文领域）。考虑到本文的主题，俺只聊2点。</p><h6 id="3-科技对【闲暇时间】的影响"><a href="#3-科技对【闲暇时间】的影响" class="headerlink" title="3.科技对【闲暇时间】的影响"></a>3.科技对【闲暇时间】的影响</h6><p>在工业革命【之后】，从业人员（包括“蓝领 ＆ 白领”）的“平均劳动时间”处于【递减】状态。再次提醒：考察“平均劳动时间”的变化，必须选取【足够大】的时间颗粒度，这有助于帮你滤掉噪声（参见本文开头的介绍）。</p><p>“平均劳动时间”【递减】是很正常滴——因为科技水平上升之后，从业人员（包括“蓝领 ＆ 白领”）的【生产率】当然也跟着提升。于是，只需要更少的人，就可以创造出比以前（工业革命前）多好几个数量级的财富。</p><p>“平均劳动时间”【递减】，也就意味着“平均闲暇时间”【递增】。可惜的是，大部分人把闲暇时间都浪费掉了；只有极少数人懂得利用这些空闲时间。于是，【马太效应】就显现出来啦。</p><p>著名思想家胡适说过一句名言：</p><blockquote><p>你要看一个国家的文明，只需考察三件事——<br>第一，看他们怎样待小孩子；<br>第二，看他们怎样待女人；<br>第三，看他们怎样利用闲暇的时间。</p></blockquote><p>虽然他说的是“国家层面”；但他所说的最后一条，放到【个人层面】依然适用。</p><p>既然聊到“闲暇时间”，俺再次吐槽一下【996工作制】——</p><p>俺之所以极力反对这个玩意儿，不仅仅因为它是【反人性】滴，而且它也违背了文明发展的潮流。</p><p>某些黑心资本家可以口吐莲花，把一个臭不可闻的压榨制度，吹嘘成所谓的“福报”。</p><p>谁要是相信这种忽悠，那就成了傻逼，活该被收【智商税】 :)</p><h6 id="4-科技对【行业】的影响"><a href="#4-科技对【行业】的影响" class="headerlink" title="4.科技对【行业】的影响"></a>4.科技对【行业】的影响</h6><p>工业革命之前，人类社会中的【行业结构】，可能在【几百年】的时间范围内都保持稳定；工业革命之后，行业的变动开始频繁，可能每隔几十年就会有变动；等到互联网普及之后，几乎【每年】都能看到某些行业被互联网颠覆。</p><p>俺在博客评论区与读者交流时，曾经引用过 IT 大牛 KK（凯文·凯利）的一句名言（大意是）：</p><blockquote><p>只有两种行业：一种已经被互联网颠覆，另一种正在被互联网颠覆</p></blockquote><p>考虑到某些读者可能会误解这句话，俺提醒一下：并【不是】说，某个行业被互联网颠覆过之后，就不再被颠覆；实际情况是，某些行业会被颠覆好几轮。</p><p>（如前所述）不光是互联网，任何一项科技成果，只要达到一定的【普及性 ＆ 影响力】，就会带来行业的变化（出现新的行业、有的行业消失、有的重新洗牌）。</p><p>行业变动越来越频繁且剧烈，这就引发另一个层面的“马太效应”。那些难以适应变化的人，会被淘汰（或被边缘化）；而那些能适应变化的人，就不用担心；更牛逼的人，不但适应了变化，而且还能利用这种变化，并从中获益（这就是俺在博客中多次提及的【反脆弱性】）</p><h5 id="结尾寄语"><a href="#结尾寄语" class="headerlink" title="结尾寄语"></a>结尾寄语</h5><p>已经跨入本世纪的20年代啦。</p><p>再次提醒大伙儿：科技的发展趋势具有【加速】的特质（斜率递增）。科技所带来的社会变革，会越来越快，而且越来越剧烈。</p><p>希望看过这篇博文的读者，【不要】沦为平庸的大多数，【不要】成为马太效应的牺牲品。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天已经是2020年了。曾几何时，大伙儿还在迎接千禧年；如今一转眼，21世纪都已经过了五分之一。有感于此，今天这篇博文就来聊聊【时间与人生】这个话题。&lt;br&gt;
    
    </summary>
    
      <category term="随想" scheme="https://xiaoo.ml/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="2020" scheme="https://xiaoo.ml/tags/2020/"/>
    
      <category term="时间" scheme="https://xiaoo.ml/tags/%E6%97%B6%E9%97%B4/"/>
    
  </entry>
  
  <entry>
    <title>大美新疆</title>
    <link href="https://xiaoo.ml/2019/12/12/%E5%A4%A7%E7%BE%8E%E6%96%B0%E7%96%86/"/>
    <id>https://xiaoo.ml/2019/12/12/大美新疆/</id>
    <published>2019-12-12T06:10:00.000Z</published>
    <updated>2020-12-02T03:38:47.565Z</updated>
    
    <content type="html"><![CDATA[<p>鉴于新疆已经连续3年没有发生暴恐事件了，我决定在25岁的尾巴上来一场说走就走的旅行，走~去新疆！<br><a id="more"></a></p><h5 id="ToGo-List：完成率81"><a href="#ToGo-List：完成率81" class="headerlink" title="ToGo List：完成率81%"></a>ToGo List：<strong>完成率81%</strong></h5><ul><li style="list-style: none"><input type="checkbox" checked> 乌鲁木齐大巴扎</li><li style="list-style: none"><input type="checkbox" checked> 天山天池</li><li style="list-style: none"><input type="checkbox" checked> 吐鲁番</li><li style="list-style: none"><input type="checkbox" checked> 喀什古城</li><li style="list-style: none"><input type="checkbox" checked> 巴音布鲁克草原</li><li style="list-style: none"><input type="checkbox" checked> 吐鲁番火焰山</li><li style="list-style: none"><input type="checkbox" checked> 霍尔果斯口岸</li><li style="list-style: none"><input type="checkbox"> 帕米尔高原</li><li style="list-style: none"><input type="checkbox" checked> 魔鬼城</li><li style="list-style: none"><input type="checkbox" checked> 艾丁湖</li><li style="list-style: none"><input type="checkbox" checked> 五彩滩</li><li style="list-style: none"><input type="checkbox" checked> 交河故城</li><li style="list-style: none"><input type="checkbox"> 八卦城</li><li style="list-style: none"><input type="checkbox"> 红旗拉普口岸</li><li style="list-style: none"><input type="checkbox" checked> 喀纳斯湖</li><li style="list-style: none"><input type="checkbox" checked> 库木塔格沙漠</li></ul><h5 id="ToEat-List：完成率88"><a href="#ToEat-List：完成率88" class="headerlink" title="ToEat List：完成率88%"></a>ToEat List：<strong>完成率88%</strong></h5><ul><li style="list-style: none"><input type="checkbox" checked> 烤包子</li><li style="list-style: none"><input type="checkbox" checked> 手抓饭</li><li style="list-style: none"><input type="checkbox" checked> 吐鲁番葡萄</li><li style="list-style: none"><input type="checkbox"> 曲曲</li><li style="list-style: none"><input type="checkbox" checked> 酸奶子</li><li style="list-style: none"><input type="checkbox" checked> 拉条子</li><li style="list-style: none"><input type="checkbox" checked> 羊腿</li><li style="list-style: none"><input type="checkbox" checked> 拌饭</li><li style="list-style: none"><input type="checkbox" checked> 大盘鸡</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;鉴于新疆已经连续3年没有发生暴恐事件了，我决定在25岁的尾巴上来一场说走就走的旅行，走~去新疆！&lt;br&gt;
    
    </summary>
    
      <category term="摄影" scheme="https://xiaoo.ml/categories/%E6%91%84%E5%BD%B1/"/>
    
    
      <category term="旅游" scheme="https://xiaoo.ml/tags/%E6%97%85%E6%B8%B8/"/>
    
      <category term="新疆" scheme="https://xiaoo.ml/tags/%E6%96%B0%E7%96%86/"/>
    
  </entry>
  
  <entry>
    <title>Hexo中首行缩进的解决办法</title>
    <link href="https://xiaoo.ml/2019/02/16/Hexo%E4%B8%AD%E9%A6%96%E8%A1%8C%E7%BC%A9%E8%BF%9B%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://xiaoo.ml/2019/02/16/Hexo中首行缩进的解决办法/</id>
    <published>2019-02-16T08:10:00.000Z</published>
    <updated>2020-11-20T00:50:05.784Z</updated>
    
    <content type="html"><![CDATA[<ni>再也受不了Hexo博客MarkDown的首行不缩进格式,想办法加个样式表调一调，只求舒心</ni><a id="more"></a><p>网上找了半天，有人说这就是MarkDown的语法规范，只有中国人才习惯首行缩进两个格格，爱用用不用滚！还有人说英文就是不用换行，为什么你需要换行，因为你老是写中文博客太LowB、还有人说把输入法调成全角在每行页首加两个空格或者直接&amp;emsp不就行了，年轻人真懒。我想我可以更懒的~</p><h4 id="整体修改-修改CSS在p标签设置缩进"><a href="#整体修改-修改CSS在p标签设置缩进" class="headerlink" title="整体修改:修改CSS在p标签设置缩进"></a>整体修改:修改CSS在p标签设置缩进</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">margin</span>:<span class="number">0</span> <span class="number">0</span> <span class="number">1.5em</span> <span class="number">0</span>;</span><br><span class="line"><span class="attribute">text-indent</span>:<span class="number">2em</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>整体修改后所有段落都缩进两个空格看起来舒服多了，但很快你会发现引用、句首也会缩进，可是这些元素根本不需要缩进呀</p><h4 id="局部优化1-重置不受影响的元素CSS属性"><a href="#局部优化1-重置不受影响的元素CSS属性" class="headerlink" title="局部优化1:重置不受影响的元素CSS属性"></a>局部优化1:重置不受影响的元素CSS属性</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">blockquote</span>&gt;<span class="selector-tag">p</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">text-indent</span>:<span class="number">0em</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="局部优化2-自定义一个标签不受缩进影响方便以后使用"><a href="#局部优化2-自定义一个标签不受缩进影响方便以后使用" class="headerlink" title="局部优化2:自定义一个标签不受缩进影响方便以后使用"></a>局部优化2:自定义一个标签不受缩进影响方便以后使用</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ni</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">text-indent</span>:<span class="number">0em</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文章的第一句话你可能你也不希望被缩进，但是CSS不提供根据child找parent的功能，看来只有请jQuery出场了</p><h4 id="局部优化3-重置被p元素包含的元素属性"><a href="#局部优化3-重置被p元素包含的元素属性" class="headerlink" title="局部优化3:重置被p元素包含的元素属性"></a>局部优化3:重置被p元素包含的元素属性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$( <span class="string">"p:has(ni)"</span>).css(<span class="string">"text-indent"</span>, <span class="string">"0em"</span>);</span><br></pre></td></tr></table></figure><ni>使用时在每个不想被缩进的段落包裹上ni标签即可</ni><h4 id="局部优化4-重置关于界面某id下面所有p元素属性"><a href="#局部优化4-重置关于界面某id下面所有p元素属性" class="headerlink" title="局部优化4:重置关于界面某id下面所有p元素属性"></a>局部优化4:重置关于界面某id下面所有p元素属性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"div #about-card"</span>).find(<span class="string">"p"</span>).css(<span class="string">"text-indent"</span>, <span class="string">"0em"</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ni&gt;再也受不了Hexo博客MarkDown的首行不缩进格式,想办法加个样式表调一调，只求舒心&lt;/ni&gt;
    
    </summary>
    
      <category term="JS" scheme="https://xiaoo.ml/categories/JS/"/>
    
      <category term="CSS" scheme="https://xiaoo.ml/categories/JS/CSS/"/>
    
    
      <category term="博客" scheme="https://xiaoo.ml/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>一个 IT 青年北漂四年的感悟zt</title>
    <link href="https://xiaoo.ml/2019/02/15/%E4%B8%80%E4%B8%AA%20IT%20%E9%9D%92%E5%B9%B4%E5%8C%97%E6%BC%82%E5%9B%9B%E5%B9%B4%E7%9A%84%E6%84%9F%E6%82%9F/"/>
    <id>https://xiaoo.ml/2019/02/15/一个 IT 青年北漂四年的感悟/</id>
    <published>2019-02-15T02:10:00.000Z</published>
    <updated>2020-11-20T00:50:05.791Z</updated>
    
    <content type="html"><![CDATA[<p>一直以来在内心中仿佛有两个人：一个人说你要实现理想，呆在中国最繁华的城市，感受大都市的生活，实现个人价值；另一个说还是回老家吧，过得安逸点，没什么压力，老婆孩子热炕头挺好的。其实这无所谓对错，只是个人的选择不同而已。<br><a id="more"></a></p><p>在北京这几年每年都会有亲戚和同学来北京找我，每次我都会帮他们规划好游玩路线，带他们游玩一圈后把他们送到火车站。今年送一个朋友回家的时候，我多想能换一下位置，坐车回老家的那个是我。</p><p>做学生跟做白领是两种不同的状态，生活状态的差异会让你明显感觉到时间的流逝，我来北京四年，要是上大学的话都已经毕业了，而我现在跟刚来北京时的生活状态差别并不大，所以这才让我觉得时间过得好快。</p><p>每次有同学问我什么时候回家，我总是笑笑，解释一下现在不能回家的理由，讲一些在老家工作的弊端，不能做自己喜欢的互联网之类的话。虽然理由每次都一样，说多了自己都感觉太敷衍，但同学却依然会时常问起，我也总想着，要是回家后就可以经常跟同学一起聚聚，玩伴多了，老家的同学好几个都买了车，如果去比较远的地方玩，开车也方便很多。</p><p>可这依然还只是想象而已。</p><p>人在相应的阶段就应该做相应的事情，最开始自己一个人，没有什么顾虑，年龄大了也会面临结婚、生孩子等一系列事情，有些事说起来不轻松，做起来就更难了。长大以后，发现自己真的不能为自己而活，自己是从农村出来的，虽然这个社会已经发展的很快，但是父母的传统思想还是很重，我不能太晚结婚，不能太晚生孩子，如果在适婚的年龄没有做相应的事，父母心里会一直惦记，这在他们心里会是一个结，了不去的心事。</p><p>话虽这么说，但我还是不赞成为了满足父母的心愿，而勉强自己接受一段感情的做法。好在自己比较幸运，前几年找到了自己喜欢的女孩，父母也很满意。现在跟家里打电话，爸妈问的问题不再是有没有找到对象而变成了什么时候结婚。</p><p>我爸跟我说只要我健康，有一份不错的工作（他也不盼我有多大的出息），他跟我妈就心满意足了，我妈说只要我好好的他们就觉得有希望，干活苦点累点他们也有动力。前几年我村里的一发小不小心因为车祸离世了，他爸妈就把自家的土地卖了很多，在我们那种地的多少意味着收入的多少，也意味着付出的多少。</p><p>父母赚钱都是为了孩子，没有了孩子，只要钱能满足自己的生活就够了，所以也就没必要种那么多地了。我知道我妈是希望等我将来成家、有了孩子后，他们也可以少种点地，跟着我到城里享福。</p><p>如果单讲农村人口收入的话，我想我们那边已经算不错的了，村里都是靠种苹果为生，这几年苹果的价格也在不断上涨，通常来讲每家一年的收入在十万左右。可直到现在我们村依然没有个像样的超市，每次看到电视上演的农村题材电视剧，人家村里的超市都让我非常羡慕，心想如果我们村有这样一个超市买东西会方便很多。</p><p>跟村里商店的老板聊，为什么不把店面好好装修一下，扩大一下规模，他跟我说就现在这样东西都不好卖，扩大规模定是要赔，更何况赚不到钱，哪来的钱扩大规模。分析一下原因，在村里开超市消费人群少，村里的年轻人大多都在城里，每年回去也就一两次，即便回去买东西又能买多少呢，况且有的人回家时有些东西都已经从外边带了。我姥爷村原来有个比较大型的商店，当时我还挺羡慕的，这几年去姥爷家也发现那个商店的规模日益缩减，现在就只剩下一个货架了。虽然收入不错，但是村里的人还是很省，父母把钱都攒着输送给孩子。</p><p>在中国绝大多数年轻人买自己的房子都是靠父母出首付，更有甚者不仅父母需要出首付，还需要补给房贷。当然也有靠自己的努力挣钱的，不过是极少数。父母很辛苦，初期要给父母孩子准备房子，结婚了要准备彩礼钱，房子装修还需要出装修的钱，孩子买车也需要父母出钱，至于你说孩子的钱呢，只能回答你三个字——享受了。</p><p>我哥说的是有道理的，城里人们的消费能力，一方面是来自于农村的父母的帮助，农村的父母把钱攒着给孩子买房子、补贴孩子的生活，这样孩子自己的钱就可以用来消费了。对于父母来说，应该只有等到孩子结婚有了孙子后，他们才会觉得踏实，而这也意味着不再需要再给孩子补贴钱了。</p><p>在我们那有一种说法，如果老人活到八、九十岁，去世之前能够看到自己的重孙子，就算是圆满了。人终有一天会离开，但是如果这样老人因自然老去而死，并且看到了第四代，也算没有什么遗憾了。我爷爷有两个儿子，我爸跟我大伯，各家都是独生子，以前我爷爷奶奶盼我哥结婚，我哥有了孩子之后现在又盼我结婚生孩子，希望能够看到我的孩子，每次给爷爷家打电话也总是会问我什么时候结婚。</p><p>老人辛苦了一辈子，把自己的孩子操持了成家立业之后，年纪大了想干也干不动了，剩下的愿望就是盼着晚辈们越来越好。现在每次我爸给我打电话，他用低沉的语气跟我说话，我心里都会特别害怕，害怕跟我说家里的亲人去世的消息，我到现在都清晰的记得我大学室友那天早上被他爸的电话叫醒，告诉他爷爷去世了让他赶快回家，他接完电话就抱着头直哭的场景。远水解不了近渴，即便现在交通工具再发达从外地回家也是需要时间，很多人因为身在外所以没能见到亲人的最后一面。</p><p>年龄大了，经历的事多了，对一些道理认识的也就更清了。刚毕业那会儿无意中跟一个同事聊起了关于公务员的话题，我那时候信誓旦旦的说公务员有什么好的，我同事说或许你现在感受不到，等过几年你就会知道在这个社会中公务员还是很有优势的。几年过去，我现在确实意识到了公务员的益处，理解了那么多人为什么要当公务员。</p><p>工作的稳定，福利的保障，不辛劳的工作，不低的社会地位，这确实是很多人期望的。最近我女朋友说她以前在老家工作是的两个前同事都考上了公务员，虽然她的薪水已经是这两个同事的好几倍，但我还是能看出来她对人家的羡慕。当初他们在一家公司上班，后来她来了北京，那两个同事都进了事业单位做了合同工，同时也在为考公务员做准备，幸运的是她们都成功了，我跟我女朋友说或许你们以后就会是两种完全不同的生活状态。</p><p>我知道同行业内有些人对于公务员这工作挺不屑的，貌似一提起公务员总是伴随着无聊、没事干、人生没意义这样的关键词。互联网行业的人有个共同点就是总喜欢谈理想，当你跟别人说理想的时候别人会赞许你、羡慕你，可笑的是，多年之后那个没有理想的朋友在自己的工作中已经有所成就，而你却依然碌碌无为。</p><p>我也研究过一些互联网公司的发展史，我发现有很多公司其实在创立初期创始人的想法也很简单，只是出于自己的兴趣而做某件事情，在做产品的过程中慢慢明确了发展目标，进而才会树立一个很大的理想。所以我现在已经不习惯把理想挂着嘴巴，闷头做事，事做好了有些事情也就顺其自然了。</p><p>一个事实是真的是有很多人是没有理想的，以前说想当科学家、当音乐家也只是徒于那种工作表面的风光而不是真正因为自己的兴趣喜欢。如果不是我高中的时候一个同学带我去网吧玩，接触到了网络，我想我跟大多数同学一样毕业以后可能就在当地找个工作干着，如果不喜欢，干烦了，就再换一个。</p><p>有的理想可能也只是干好自己的工作，希望在工作中取得某项成就这样的小愿望而已，万不会上升到改变世界、让人类的生活更加美好这样的高度。所以我也一直觉得自己是幸运的，这个时代有了互联网，要不还真的不知道自己能干什么。</p><p>以前在老家的时候，总是听人说北京的消费很高，买瓶矿泉水都要 5 块钱这类的话。来北京后发现其实不是那么回事，客观来讲，北京的房价高、房租高，除了这两样外，物价跟其他地方差不多。拿某个做米线的品牌来讲，在北京的价格跟其它地方的价格是一样的，一碗米线 26 元，在北京的门店会早早的排起队，而在我们那县城到了饭点，店里还未坐满人。</p><p>确实有 5 块钱的矿泉水，但要不就是在景区购买，要不就是那瓶水确实很贵。正常去超市买东西的话，北京的物价跟我们老家那差不多，并没有人们所说的那么夸张。但因为北京的商家多，有些品牌的东西贵就是因为其东西做的好，成本高，并不是因为在北京而故意提高价格。面临的诱惑多，所以你也会感觉钱花的很快。</p><p>我曾经还很幼稚的在思考一个问题，认为自己吃的东西跟在老家也差不多，虽然有时候会去不错的餐厅吃饭，但是每月也就固定的几次，为什么自己总是攒不下钱呢。后来一想，虽然你吃的东西跟家里差不多，但是某种食品在家里可能几天吃一次，在北京确是想吃都吃，上大学那会儿吃一次肯德基都不太容易，工作后每天的午饭都是肯德基，直到后来都把肯德基吃腻了。东西还是那些东西，可消费频率提高了，花的钱自然就多了。</p><p>很多人来北京都是受媒体和影视作品的宣传影响，因为电视上宣传的都是一幅高楼大厦，工作的人光鲜亮丽的景象，所以很多人也都幻想着来北京后能过上这样的生活。可是来到北京后会发现很多事情都不一样，特别是如果你的薪水不高的话，可能就只能住城市郊区的自建房或者是离市里很远的小区，你可能还会觉得自己住的地方都不如老家。</p><p>曾经有同事问我，为什么互联网公司的员工都普遍比较年轻呢，我想一来是因为互联网在中国的历史就很短，到现在历史还不超过 20 年；二来是因为员工总是更新迭代吧，老员工年纪大了离开了公司去老家，刚毕业的年轻人进入到了互联网公司，增加了新的活力。</p><p>虽然互联网行业的平均薪水挺高，但互联网公司基本上都属于民企，所以在某些方面不太占据优势，例如户口，只有几个大的互联网公司才会有名额，而且数量还不多，这点确实不如一些央企、国企。中国是个有特殊国情的国家，户籍制度也是社会讨论热点的话题，其实如果没有户籍制度的话，北漂族们面临的最大的问题可能也就只是房价了。</p><p>我原来还想过有没有人研究一下北漂族最后的结果是怎样的，后来一想其实北漂也是近几年才有的，以前人们的收入差距没有这么大，大家的工作性质也差不多，特地去外地工作的人也不像现在这么多，所以即便是资深北漂也就 10 年多的时间，还看不出结果。</p><p>不过通过我的观察，北漂的结果大概分为三类：一类是留在了北京，在北京买了房、有了户口，定居下来；一类是过着跟老婆孩子异地分居的生活，老婆和孩子在老家，自己在北京工作，固定频率回老家一次；还有一类是继续在北京呆着，依然过着租房的生活，孩子上学交着借读费，享受不到北京市民的待遇。</p><p>在任何一个国家有发展不均衡的现象，典型的如医疗，教育，行业发展也一样，如果是传统行业的话还好说一些，但是互联网行业由于他本身的一些特性，所以无论是发展环境还是对人才的吸引来说一线城市都要好很多。</p><p>虽然这几年有所好转，一些二、三线城市已经有一些工作机会，我身边也有同事离开北京回到老家工作的，但有的最后还是回来了，薪水是一方面，最主要的还是工作氛围太差以及无法给自己很好的发展空间。</p><p>最后，我在这里也感谢下我现在所在的公司——虽然公司去年才成立的，但是小伙伴们都很努力也很团结，跟大家一起工作，让我有家的感觉，希望公司能越做越大。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直以来在内心中仿佛有两个人：一个人说你要实现理想，呆在中国最繁华的城市，感受大都市的生活，实现个人价值；另一个说还是回老家吧，过得安逸点，没什么压力，老婆孩子热炕头挺好的。其实这无所谓对错，只是个人的选择不同而已。&lt;br&gt;
    
    </summary>
    
      <category term="日常" scheme="https://xiaoo.ml/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="感悟" scheme="https://xiaoo.ml/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>某在线教育网站VIP视频和高清视频破解</title>
    <link href="https://xiaoo.ml/2019/02/14/MBA%E5%A4%A7%E5%B8%88%E7%BD%91%E7%AB%99VIP%E8%A7%86%E9%A2%91%E5%92%8C%E9%AB%98%E6%B8%85%E8%A7%86%E9%A2%91%E7%A0%B4%E8%A7%A3/"/>
    <id>https://xiaoo.ml/2019/02/14/MBA大师网站VIP视频和高清视频破解/</id>
    <published>2019-02-14T02:10:00.000Z</published>
    <updated>2020-12-02T03:38:47.560Z</updated>
    
    <content type="html"><![CDATA[<ni>刚刚有朋友咨询我关于细分领域在线教育的问题，我不禁想到有个培训网站还不错，就是技术糙了点…</ni><a id="more"></a><p>网站名就略去了，说实话我感觉薛睿老师讲的蛮好，他的课活泼生动，浅显易懂。尤其在论证分析方面能给不少有用的指导，确实让人受益匪浅。而且网站大多数视频都是免费课程，可谓十分的良心。好了广告时间到此结束。</p><p>为啥要“破解”这个网站呢，其实也不能说破解只能说无意之举，凭直觉这个会有BUG,然后试了下果然有BUG，于是我就厚着脸皮免费看下去啦~~~</p><p>以上两个BUG我已于前年微信通知薛睿老师修改，并取得对我免费收看付费视频造成损失的谅解，两年过去了应该修改好了我就拿出来供大家交流学习</p><h2 id="观看收费VIP视频"><a href="#观看收费VIP视频" class="headerlink" title="观看收费VIP视频"></a>观看收费VIP视频</h2><h4 id="漏洞类型（播放id重复并且按大小顺序生成）"><a href="#漏洞类型（播放id重复并且按大小顺序生成）" class="headerlink" title="漏洞类型（播放id重复并且按大小顺序生成）"></a>漏洞类型（播放id重复并且按大小顺序生成）</h4><ol><li>先打开一个免费视频的播放界面<br><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/111.png" alt=""><br><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/222.png" alt=""><br><br></li><li>打开你要观看的收费视频介绍页<br><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/333.png" alt=""><br><br></li><li>将收费的id填入免费播放视频界面id即可观看<br><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/444.png" alt=""><br><br></li></ol><h2 id="观看高清视频"><a href="#观看高清视频" class="headerlink" title="观看高清视频"></a>观看高清视频</h2><h4 id="漏洞类型（设置清晰度时仅仅前端验证用户属性）"><a href="#漏洞类型（设置清晰度时仅仅前端验证用户属性）" class="headerlink" title="漏洞类型（设置清晰度时仅仅前端验证用户属性）"></a>漏洞类型（设置清晰度时仅仅前端验证用户属性）</h4><ol><li>直接点击切换高清视频会弹出VIP充值界面<br><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/11.png" alt=""><br><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/22.png" alt=""><br><br></li><li>使用charles抓包工具抓取点击标清时的请求<br><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/33.png" alt=""><br><br></li><li>在线编辑该请求设置value为2<br><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/66.png" alt=""><br><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/44.png" alt=""><br><br></li><li>刷新浏览器即可看高清<br><img src="https://my-blog-hexo-1253240671.cos.ap-shanghai.myqcloud.com/images/55.png" alt=""></li></ol><ni>PS：本博文仅供技术参考和学习交流使用，不当使用产生的一起后果和本人无关。</ni>]]></content>
    
    <summary type="html">
    
      &lt;ni&gt;刚刚有朋友咨询我关于细分领域在线教育的问题，我不禁想到有个培训网站还不错，就是技术糙了点…&lt;/ni&gt;
    
    </summary>
    
      <category term="其他" scheme="https://xiaoo.ml/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="破解" scheme="https://xiaoo.ml/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>PS的一些Tips</title>
    <link href="https://xiaoo.ml/2019/02/13/PS%E7%9A%84%E4%B8%80%E4%BA%9BTips/"/>
    <id>https://xiaoo.ml/2019/02/13/PS的一些Tips/</id>
    <published>2019-02-13T02:10:00.000Z</published>
    <updated>2020-11-20T00:50:05.786Z</updated>
    
    <content type="html"><![CDATA[<ni>有时候懒得找美工要图就直接开PS自己搞</ni><a id="more"></a><p><br></p><ul><li>矩形<strong>选择工具</strong> M 左上角不要设置自动选择，而是选择图层而不是组</li></ul><ul><li><strong>移动工具</strong> V</li></ul><ul><li>视图 —— 显示 —— 打开智能参考线,同时打开 标尺</li></ul><ul><li>SHIFT  画圆, ALT  从圆心画圆</li></ul><ul><li>图片放的很大后，按住 空格 键变为手型工具可以拖动。</li></ul><ul><li>使用 <strong>历史画笔工具+高斯模糊</strong> 可以磨图，去斑点</li></ul><ul><li><strong>钢笔工具</strong>描边后，在路径菜单存储，然后选这下面的“将路径以图层载入”</li></ul><ul><li><strong>双击空白区域</strong>打开文件</li></ul><ul><li>右键背景进行设置画布颜色，或者点击油漆桶，SHIFT+点击背景画布变颜色。</li></ul><ul><li>TAB  &amp;&amp;  SHIFT+TAB  放大主屏幕，隐蔽菜单和显示菜单</li></ul><ul><li><strong>缩放工具</strong>快捷键 Z  使用 CTRL 放大  ALT 缩小</li></ul><ul><li><strong>非手型工具</strong>使用中按 空格 可以使用手型工具，双击手型工具可以1：1显示</li></ul><ul><li><strong>橡皮擦</strong>功能使用过程中按住 ALT 可以变成恢复工具</li></ul><ul><li><strong>涂抹工具</strong>使用中按住 ALT 可以变成前景色涂抹</li></ul><ul><li>选择区域后使用<strong>移动工具</strong>移动，按住 ALT 为复制后才移动</li></ul><ul><li>拖动区域移动时，按住 SHIFT 可以辅助水平，45度，垂直移动。</li></ul><ul><li><strong>绘画工具</strong>使用时按住SHIFT可以连接两点</li></ul><ul><li><strong>裁剪工具</strong>使用时避免自动贴边 按住 CTRL</li></ul><ul><li>CTRL+ALT 拖动鼠标 快速复制当前图片为一个图层</li><li><strong>存储选区</strong>  如果需要在选择好选区——&gt;复制到新图层之后还要找到之前那个选区，有两种办法<ol><li>复制到新图层时选择 ——&gt; 通过剪切的图层，这样减去的部分为黑色，在原图上先选择反向，然后就可以选择剩余的部分了。</li><li>选好选区后选择 ——&gt; 存储选区，复制完图层后，回到原图上选择载入选区</li></ol></li></ul><ul><li>首选项 设置<strong>测量尺寸</strong>为“像素”，这样可以使用标尺量取图片两点之间的像素距离</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ni&gt;有时候懒得找美工要图就直接开PS自己搞&lt;/ni&gt;
    
    </summary>
    
      <category term="PS" scheme="https://xiaoo.ml/categories/PS/"/>
    
    
      <category term="PhotoShops" scheme="https://xiaoo.ml/tags/PhotoShops/"/>
    
  </entry>
  
  <entry>
    <title>DNS缓存的清理方法</title>
    <link href="https://xiaoo.ml/2019/02/12/DNS%E7%BC%93%E5%AD%98%E7%9A%84%E6%B8%85%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <id>https://xiaoo.ml/2019/02/12/DNS缓存的清理方法/</id>
    <published>2019-02-12T08:10:00.000Z</published>
    <updated>2020-11-20T00:50:05.781Z</updated>
    
    <content type="html"><![CDATA[<ni>Win、OSX、Chrome的刷新缓存方法</ni><a id="more"></a><!-- toc --><h1 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chrome://net-internals/<span class="comment">#dns</span></span><br></pre></td></tr></table></figure><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /flushdns</span><br></pre></td></tr></table></figure><h1 id="OSX"><a href="#OSX" class="headerlink" title="OSX"></a>OSX</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo killall -HUP mDNSResponder</span><br><span class="line">sudo killall mDNSResponderHelper</span><br><span class="line">sudo  dscacheutil -flushcache</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ni&gt;Win、OSX、Chrome的刷新缓存方法&lt;/ni&gt;
    
    </summary>
    
      <category term="Others" scheme="https://xiaoo.ml/categories/Others/"/>
    
    
      <category term="DNS" scheme="https://xiaoo.ml/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>Python端极光推送超时的解决办法</title>
    <link href="https://xiaoo.ml/2019/02/12/Python%E7%AB%AF%E6%9E%81%E5%85%89%E6%8E%A8%E9%80%81%E8%B6%85%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://xiaoo.ml/2019/02/12/Python端极光推送超时的解决办法/</id>
    <published>2019-02-12T04:10:00.000Z</published>
    <updated>2020-11-20T00:50:05.786Z</updated>
    
    <content type="html"><![CDATA[<ni>因为VPS在国外，极光推送使用官方的代码老是超时~~~</ni><a id="more"></a><p>一般来说服务器推送是尽力而为不需要返回结果的，所以可以默认返回成功，使用极光推送3次不成功再用微信推送。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post_to_iOS</span><span class="params">(code, vendor, phone_num, content, remark=<span class="string">'短信内容Remark'</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">        调用极光推送发送到iOS</span></span><br><span class="line"><span class="string">        :param phone_num:</span></span><br><span class="line"><span class="string">        :param vendor:</span></span><br><span class="line"><span class="string">        :param code:</span></span><br><span class="line"><span class="string">        :param remark: 消息内容</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">    app_key = <span class="string">'3333333333333333'</span></span><br><span class="line">    master_secret = <span class="string">'44444444444444444444'</span></span><br><span class="line">    is_junk_msg = check_junk_msg(msg=content)</span><br><span class="line"></span><br><span class="line">    _jpush = jpush.JPush(app_key, master_secret)</span><br><span class="line">    _jpush.set_logging(<span class="string">"ERROR"</span>)</span><br><span class="line"></span><br><span class="line">    push = _jpush.create_push()</span><br><span class="line">    push.audience = jpush.all_</span><br><span class="line">    push.options = &#123;<span class="string">"apns_production"</span>: <span class="keyword">False</span>&#125;</span><br><span class="line">    push.platform = <span class="string">'ios'</span></span><br><span class="line"></span><br><span class="line">    custom_alias = [<span class="string">"5555555555555555"</span>]</span><br><span class="line">    aliast_d = &#123;<span class="string">"alias"</span>: custom_alias&#125;</span><br><span class="line">    push.audience = jpush.audience(</span><br><span class="line">        aliast_d</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    ios_msg = jpush.ios(alert=title, sound=<span class="string">"msgring.caf"</span>, badge=<span class="string">"+1"</span>)</span><br><span class="line">    push.notification = jpush.notification(alert=<span class="string">"Hello, JPush!"</span>, ios=ios_msg)</span><br><span class="line"></span><br><span class="line">    DBUtil.insert_data(tag=DBUtil.I, online=<span class="keyword">False</span>, msg=remark, code=code, vendor=vendor,</span><br><span class="line">                       transfer=<span class="string">'ios_apn'</span>)</span><br><span class="line">    <span class="comment"># 由于短时间多次推送高概率会在此方法卡死，所以写入线程，牺牲部分到达率</span></span><br><span class="line">    <span class="comment"># 如果是垃圾短信就不弹出提醒了</span></span><br><span class="line">    <span class="keyword">if</span> is_junk_msg <span class="keyword">is</span> <span class="keyword">True</span>:</span><br><span class="line">        log_show(<span class="string">'垃圾短信不进行推送'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        _thread.start_new_thread(post_to_jiguang, (push, remark, code, vendor, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 这里直接返回True并没有实际意义</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></table></figure><h4 id="下面代码在线程中执行，执行失败进行3次重试"><a href="#下面代码在线程中执行，执行失败进行3次重试" class="headerlink" title="下面代码在线程中执行，执行失败进行3次重试"></a>下面代码在线程中执行，执行失败进行3次重试</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post_to_jiguang</span><span class="params">(push, remark, code, vendor, remain_count)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> remain_count &lt;= <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># 极光不通就用微信推送</span></span><br><span class="line">        log_show(<span class="string">"@@@@@@@@@@@@@@@@尝试使用Server酱推送@@@@@@@@@@@@@@@@@"</span>)</span><br><span class="line">        post_to_server_jiang(code=code, vendor=vendor, remark=remark)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">try</span>:  <span class="comment"># 重试两次</span></span><br><span class="line">        <span class="keyword">if</span> push.send(timeout=<span class="number">3</span>).get_status_code() == <span class="number">200</span>:</span><br><span class="line">            log_show(<span class="string">'极光推送成功'</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            log_show(<span class="string">'极光推送失败'</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        log_show(<span class="string">"@@@@@@@@@@@@@@@@极光推送超时,尝试重试@@@@@@@@@@@@@@@@@"</span>)</span><br><span class="line">        _thread.start_new_thread(post_to_jiguang, (push, remark, code, vendor, remain_count - <span class="number">1</span>))</span><br></pre></td></tr></table></figure><h4 id="三次都失败选择微信推送"><a href="#三次都失败选择微信推送" class="headerlink" title="三次都失败选择微信推送"></a>三次都失败选择微信推送</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http://sc.ftqq.com/?c=code</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post_to_server_jiang</span><span class="params">(code, vendor,</span></span></span><br><span class="line"><span class="function"><span class="params">                         url=<span class="string">'https://sc.ftqq.com/AAAAAAAAAAAAAAAAAAAAAAA.send'</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                         remark=<span class="string">'短信内容Remark'</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    调用server酱接口发送消息，每天500条,重复消息一分钟只能发一次</span></span><br><span class="line"><span class="string">    :param url: 服务器地址</span></span><br><span class="line"><span class="string">    :param remark: 消息内容</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> code == <span class="string">'CODE'</span>:</span><br><span class="line">        title = <span class="string">'短消息'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        title = vendor + <span class="string">'@ '</span> + code</span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> previous_time, retry_count, append</span><br><span class="line">    now_time = time.time()</span><br><span class="line">    remark = remark.replace(<span class="string">'\n'</span>, <span class="string">'XXX'</span>)</span><br><span class="line">    <span class="comment"># 每人每天发送上限500条，相同内容5分钟内不能重复发送，不同内容一分钟只能发送30条</span></span><br><span class="line">    <span class="keyword">if</span> previous_time != <span class="number">0</span> <span class="keyword">and</span> now_time &lt; (previous_time + <span class="number">5</span> * <span class="number">60</span> + <span class="number">1</span>):</span><br><span class="line">        append = <span class="string">' --- 第'</span> + str(retry_count) + <span class="string">'个小尾巴'</span></span><br><span class="line">        retry_count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        append = <span class="string">''</span></span><br><span class="line">        previous_time = now_time</span><br><span class="line">        retry_count = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    remark += append</span><br><span class="line">    r = requests.post(url, data=&#123;<span class="string">'text'</span>: title, <span class="string">'desp'</span>: remark&#125;)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span> <span class="keyword">and</span> get_errno(r.content) == <span class="number">0</span>:</span><br><span class="line">        DBUtil.insert_data(tag=DBUtil.I, online=<span class="keyword">False</span>, msg=remark, code=code, vendor=vendor,</span><br><span class="line">                           transfer=<span class="string">'serverjiang'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ni&gt;因为VPS在国外，极光推送使用官方的代码老是超时~~~&lt;/ni&gt;
    
    </summary>
    
      <category term="编程" scheme="https://xiaoo.ml/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://xiaoo.ml/tags/Python/"/>
    
      <category term="极光推送" scheme="https://xiaoo.ml/tags/%E6%9E%81%E5%85%89%E6%8E%A8%E9%80%81/"/>
    
  </entry>
  
  <entry>
    <title>Swift、Java、Python的AES加密</title>
    <link href="https://xiaoo.ml/2019/02/12/Swift%E3%80%81Java%E3%80%81Python%E7%9A%84AES%E5%8A%A0%E5%AF%86/"/>
    <id>https://xiaoo.ml/2019/02/12/Swift、Java、Python的AES加密/</id>
    <published>2019-02-12T02:10:00.000Z</published>
    <updated>2020-11-20T00:50:05.788Z</updated>
    
    <content type="html"><![CDATA[<ni>项目需要搞了一个不同端能通用加解密的工具类</ni><a id="more"></a><p>加密算法使用AES CBC 256位，为了简单起见秘钥和偏移量IV分别固定位为32位和16位。</p><!-- toc --><h1 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">import</span> CryptoSwift</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="type">AES_KEY</span>:<span class="type">String</span> = <span class="string">"88888888888888888888888888888888"</span></span><br><span class="line"><span class="keyword">let</span> aes_cbc_iv = <span class="string">"6666666666666666"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">aesEncryptBase64</span><span class="params">(plainStr:String,aes_key:String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> aes = <span class="keyword">try</span> <span class="type">AES</span>(key: aes_key, iv: aes_cbc_iv, padding: .pkcs7)</span><br><span class="line">        <span class="keyword">let</span> ciphertext = <span class="keyword">try</span> aes.encrypt(<span class="type">Array</span>(plainStr.utf8))</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Data</span>(ciphertext).base64EncodedString()</span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"error"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">aesEncryptHex</span><span class="params">(plain_str:String,aes_key:String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">     <span class="keyword">do</span> &#123;</span><br><span class="line">         <span class="keyword">let</span> aes = <span class="keyword">try</span> <span class="type">AES</span>(key: aes_key, iv: aes_cbc_iv, padding: .pkcs7)</span><br><span class="line">         <span class="keyword">let</span> ciphertext = <span class="keyword">try</span> aes.encrypt(<span class="type">Array</span>(plain_str.utf8))</span><br><span class="line">         <span class="keyword">return</span> <span class="type">Data</span>(ciphertext).toHexString()</span><br><span class="line">     &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">"error"</span></span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">aesDecryptBase64</span><span class="params">(encrypt_base64 : String,aes_key:String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> data = <span class="type">Data</span>(base64Encoded: encrypt_base64) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="string">""</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> aes = <span class="keyword">try</span> <span class="type">AES</span>(key: aes_key, iv: aes_cbc_iv, padding: .pkcs7)</span><br><span class="line">        <span class="keyword">let</span> ciphertext = <span class="keyword">try</span> aes.decrypt([<span class="type">UInt8</span>](data))</span><br><span class="line">        <span class="keyword">return</span> <span class="type">String</span>(bytes: <span class="type">Data</span>(ciphertext).bytes, encoding: .utf8) ?? <span class="string">"Could not decrypt"</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"error"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">aesDecryptHex</span><span class="params">(encrypt_hex : String,aes_key:String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">     <span class="keyword">do</span> &#123;</span><br><span class="line">         <span class="keyword">let</span> data = <span class="type">Array</span>&lt;<span class="type">UInt8</span>&gt;(hex: encrypt_hex)</span><br><span class="line">         <span class="keyword">let</span> aes = <span class="keyword">try</span> <span class="type">AES</span>(key: aes_key, iv: aes_cbc_iv, padding: .pkcs7)</span><br><span class="line">         <span class="keyword">let</span> ciphertext = <span class="keyword">try</span> aes.decrypt([<span class="type">UInt8</span>](data))</span><br><span class="line">         <span class="keyword">return</span> <span class="type">String</span>(bytes: <span class="type">Data</span>(ciphertext).bytes, encoding: .utf8) ?? <span class="string">"Could not decrypt"</span></span><br><span class="line">     &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">"error"</span></span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String s_AES_KEY = <span class="string">"88888888888888888888888888888888"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String a_AES_IV = <span class="string">"6666666666666666"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">aesEncrypt</span><span class="params">(String sSrc)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Cipher cipher = Cipher.getInstance(<span class="string">"AES/CBC/PKCS5Padding"</span>);</span><br><span class="line">        <span class="keyword">byte</span>[] raw = s_AES_KEY.getBytes();</span><br><span class="line">        SecretKeySpec skeySpec = <span class="keyword">new</span> SecretKeySpec(raw, <span class="string">"AES"</span>);</span><br><span class="line">        IvParameterSpec iv = <span class="keyword">new</span> IvParameterSpec(a_AES_IV.getBytes());<span class="comment">//使用CBC模式，需要一个向量iv，可增加加密算法的强度</span></span><br><span class="line">        cipher.init(Cipher.ENCRYPT_MODE, skeySpec, iv);</span><br><span class="line">        <span class="keyword">byte</span>[] encrypted = cipher.doFinal(sSrc.getBytes(<span class="string">"utf-8"</span>));</span><br><span class="line"><span class="comment">//        return new BASE64Encoder().encode(encrypted);//此处使用BASE64做转码。</span></span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();  <span class="comment">//此处使用十六进制转码。</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">byte</span> b : encrypted) &#123;</span><br><span class="line">            sb.append(String.format(<span class="string">"%02X"</span>, b));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">aesDecrypt</span><span class="params">(String sSrc)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="keyword">byte</span>[] raw = sKey.getBytes(<span class="string">"ASCII"</span>);</span><br><span class="line">           SecretKeySpec skeySpec = <span class="keyword">new</span> SecretKeySpec(raw, <span class="string">"AES"</span>);</span><br><span class="line">           Cipher cipher = Cipher.getInstance(<span class="string">"AES/CBC/PKCS5Padding"</span>);</span><br><span class="line">           IvParameterSpec iv = <span class="keyword">new</span> IvParameterSpec(ivParameter.getBytes());</span><br><span class="line">           cipher.init(Cipher.DECRYPT_MODE, skeySpec, iv);</span><br><span class="line">           <span class="keyword">byte</span>[] encrypted1 = <span class="keyword">new</span> BASE64Decoder().decodeBuffer(sSrc);<span class="comment">//先用base64解密</span></span><br><span class="line">           <span class="keyword">byte</span>[] original = cipher.doFinal(encrypted1);</span><br><span class="line">           String originalString = <span class="keyword">new</span> String(original, <span class="string">"utf-8"</span>);</span><br><span class="line">           <span class="keyword">return</span> originalString;</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="Python3"><a href="#Python3" class="headerlink" title="Python3"></a>Python3</h1><p>需要安装pycryptodome模块，cipher每次加解密必须初始化也就是说只能用一次，并且不能又加密又解密。</p><h4 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> unpad</span><br><span class="line"></span><br><span class="line">__aes_key = <span class="string">b'88888888888888888888888888888888'</span></span><br><span class="line">__aes_cbc_iv = <span class="string">b'6666666666666666'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">aes_cbc_256_encrypt_base64</span><span class="params">(plain_data)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    AES加密数据</span></span><br><span class="line"><span class="string">    :param plain_data: 待加密数据</span></span><br><span class="line"><span class="string">    :return: Base64格式加密数据</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    __aes_cipher_e = AES.new(__aes_key, AES.MODE_CBC, iv=__aes_cbc_iv)</span><br><span class="line">    ct_bytes = __aes_cipher_e.encrypt(pad(plain_data.encode(<span class="string">'utf-8'</span>), AES.block_size))</span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(ct_bytes).decode(<span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">aes_cbc_256_decrypt_base64</span><span class="params">(base64_string)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    AES解密数据</span></span><br><span class="line"><span class="string">    :param base64_string: Base64格式加密数据</span></span><br><span class="line"><span class="string">    :return: 原始数据</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    encrypted_bytes = base64.b64decode(base64_string)</span><br><span class="line">    <span class="comment"># cipher必须每次解密必须初始化也就是说只能用一次，并且不能又加密又解密。</span></span><br><span class="line">    __aes_cipher_d = AES.new(__aes_key, AES.MODE_CBC, iv=__aes_cbc_iv)</span><br><span class="line">    pt = unpad(__aes_cipher_d.decrypt(encrypted_bytes), AES.block_size)</span><br><span class="line">    <span class="keyword">return</span> pt.decode(<span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">aes_cbc_256_encrypt_hex</span><span class="params">(plain_data)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    AES加密数据</span></span><br><span class="line"><span class="string">    :param plain_data: plain_data: 待加密数据</span></span><br><span class="line"><span class="string">    :return: 十六进制格式加密数据</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    __aes_cipher_e = AES.new(__aes_key, AES.MODE_CBC, iv=__aes_cbc_iv)</span><br><span class="line">    ct_bytes = __aes_cipher_e.encrypt(pad(plain_data.encode(<span class="string">'utf-8'</span>), AES.block_size))</span><br><span class="line">    <span class="keyword">return</span> ct_bytes.hex().upper()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">aes_cbc_256_decrypt_hex</span><span class="params">(hex_string)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    AES解密数据</span></span><br><span class="line"><span class="string">    :param hex_string: 十六进制加密数据</span></span><br><span class="line"><span class="string">    :return: 原始数据</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    encrypted_bytes = binascii.unhexlify(hex_string)</span><br><span class="line">    <span class="comment"># cipher必须每次解密必须初始化也就是说只能用一次，并且不能又加密又解密。</span></span><br><span class="line">    __aes_cipher_d = AES.new(__aes_key, AES.MODE_CBC, iv=__aes_cbc_iv)</span><br><span class="line">    pt = unpad(__aes_cipher_d.decrypt(encrypted_bytes), AES.block_size)</span><br><span class="line">    <span class="keyword">return</span> pt.decode(<span class="string">"utf-8"</span>)</span><br></pre></td></tr></table></figure><h4 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Decrypt</span><br><span class="line"></span><br><span class="line">data = <span class="string">"bilibili哔哩哔哩666"</span></span><br><span class="line"></span><br><span class="line">print(data)</span><br><span class="line">hex= Decrypt.aes_cbc_256_encrypt_base64(data)</span><br><span class="line">print(hex)</span><br><span class="line">plain=Decrypt.aes_cbc_256_decrypt_base64(hex)</span><br><span class="line">print(plain)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"------------------------"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(data)</span><br><span class="line">hex= Decrypt.aes_cbc_256_encrypt_hex(data)</span><br><span class="line">print(hex)</span><br><span class="line">plain=Decrypt.aes_cbc_256_decrypt_hex(hex)</span><br><span class="line">print(plain)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ni&gt;项目需要搞了一个不同端能通用加解密的工具类&lt;/ni&gt;
    
    </summary>
    
      <category term="编程" scheme="https://xiaoo.ml/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://xiaoo.ml/tags/Python/"/>
    
      <category term="Java" scheme="https://xiaoo.ml/tags/Java/"/>
    
      <category term="Swift" scheme="https://xiaoo.ml/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>添加SSL证书</title>
    <link href="https://xiaoo.ml/2019/02/11/%E6%B7%BB%E5%8A%A0SSL%E8%AF%81%E4%B9%A6/"/>
    <id>https://xiaoo.ml/2019/02/11/添加SSL证书/</id>
    <published>2019-02-11T14:10:00.000Z</published>
    <updated>2020-11-20T00:50:05.799Z</updated>
    
    <content type="html"><![CDATA[<ni>终于想起来给网站加个锁了~</ni><a id="more"></a><ul><li>前往FreeSSL.org</li><li>输入我的域名，选择文件创建</li><li>在域名根目录创建网站指定的文件，并确保chod 777</li><li>网站点击验证，并下载证书</li><li>上传证书到服务器，配置 nginx指定证书路径</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen       443 ssl;</span><br><span class="line">server_name  localhost;</span><br><span class="line">root /data/blog;    </span><br><span class="line"></span><br><span class="line">ssl_certificate &quot;/data/chain/full_chain.pem&quot;;</span><br><span class="line">ssl_certificate_key &quot;/data/chain/private.key&quot;;</span><br><span class="line">ssl_session_cache shared:SSL:1m;</span><br><span class="line">ssl_session_timeout  10m;</span><br><span class="line">ssl_ciphers HIGH:!aNULL:!MD5;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">error_page 404 /404.html;</span><br><span class="line">location = /40x.html &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">error_page 500 502 503 504 /50x.html;</span><br><span class="line">location = /50x.html &#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置http自动跳转https （可选）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">listen       80 default_server;</span><br><span class="line">listen       [::]:80 default_server;</span><br><span class="line">server_name  _;</span><br><span class="line">rewrite ^(.*)$  https://$host$1 permanent;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ni&gt;终于想起来给网站加个锁了~&lt;/ni&gt;
    
    </summary>
    
      <category term="其他" scheme="https://xiaoo.ml/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>LRU和LFU的区别</title>
    <link href="https://xiaoo.ml/2019/02/11/LRU%E5%92%8CLFU%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://xiaoo.ml/2019/02/11/LRU和LFU的区别/</id>
    <published>2019-02-11T12:10:00.000Z</published>
    <updated>2020-11-20T00:50:05.785Z</updated>
    
    <content type="html"><![CDATA[<p>LRU和LFU是不同的!<br><a id="more"></a></p><p>LRU是最近最少使用页面置换算法(Least Recently Used),也就是首先淘汰最长时间未被使用的页面!</p><p>LFU是最近最不常用页面置换算法(Least Frequently Used),也就是淘汰一定时期内被访问次数最少的页!</p><p>比如,第二种方法的时期T为10分钟,如果每分钟进行一次调页,主存块为3,若所需页面走向为2 1 2 1 2 3 4</p><p>注意,当调页面4时会发生缺页中断</p><p>若按LRU算法,应换页面1(1页面最久未被使用) 但按LFU算法应换页面3(十分钟内,页面3只使用了一次)</p><p>可见LRU关键是看页面最后一次被使用到发生调度的时间长短,</p><p>而LFU关键是看一定时间段内页面被使用的频率!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;LRU和LFU是不同的!&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="https://xiaoo.ml/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
</feed>
